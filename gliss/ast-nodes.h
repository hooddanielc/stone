#pragma once

namespace gliss {

namespace ast {

class variable_identifier_identifier_t;
class primary_expression_variable_identifier_t;
class primary_expression_intconstant_t;
class primary_expression_uintconstant_t;
class primary_expression_floatconstant_t;
class primary_expression_boolconstant_t;
class primary_expression_doubleconstant_t;
class primary_expression_left_paren_expression_right_paren_t;
class postfix_expression_primary_expression_t;
class postfix_expression_postfix_expression_left_bracket_integer_expression_right_bracket_t;
class postfix_expression_function_call_t;
class postfix_expression_postfix_expression_dot_field_selection_t;
class postfix_expression_postfix_expression_inc_op_t;
class postfix_expression_postfix_expression_dec_op_t;
class integer_expression_expression_t;
class function_call_function_call_or_method_t;
class function_call_or_method_function_call_generic_t;
class function_call_generic_function_call_header_with_parameters_right_paren_t;
class function_call_generic_function_call_header_no_parameters_right_paren_t;
class function_call_header_no_parameters_function_call_header_void_t;
class function_call_header_no_parameters_function_call_header_t;
class function_call_header_with_parameters_function_call_header_assignment_expression_t;
class function_call_header_with_parameters_function_call_header_with_parameters_comma_assignment_expression_t;
class function_call_header_function_identifier_left_paren_t;
class function_identifier_type_specifier_t;
class function_identifier_postfix_expression_t;
class unary_expression_postfix_expression_t;
class unary_expression_inc_op_unary_expression_t;
class unary_expression_dec_op_unary_expression_t;
class unary_expression_unary_operator_unary_expression_t;
class unary_operator_plus_t;
class unary_operator_dash_t;
class unary_operator_bang_t;
class unary_operator_tilde_t;
class multiplicative_expression_unary_expression_t;
class multiplicative_expression_multiplicative_expression_star_unary_expression_t;
class multiplicative_expression_multiplicative_expression_slash_unary_expression_t;
class multiplicative_expression_multiplicative_expression_percent_unary_expression_t;
class additive_expression_multiplicative_expression_t;
class additive_expression_additive_expression_plus_multiplicative_expression_t;
class additive_expression_additive_expression_dash_multiplicative_expression_t;
class shift_expression_additive_expression_t;
class shift_expression_shift_expression_left_op_additive_expression_t;
class shift_expression_shift_expression_right_op_additive_expression_t;
class relational_expression_shift_expression_t;
class relational_expression_relational_expression_left_angle_shift_expression_t;
class relational_expression_relational_expression_right_angle_shift_expression_t;
class relational_expression_relational_expression_le_op_shift_expression_t;
class relational_expression_relational_expression_ge_op_shift_expression_t;
class equality_expression_relational_expression_t;
class equality_expression_equality_expression_eq_op_relational_expression_t;
class equality_expression_equality_expression_ne_op_relational_expression_t;
class and_expression_equality_expression_t;
class and_expression_and_expression_ampersand_equality_expression_t;
class exclusive_or_expression_and_expression_t;
class exclusive_or_expression_exclusive_or_expression_caret_and_expression_t;
class inclusive_or_expression_exclusive_or_expression_t;
class inclusive_or_expression_inclusive_or_expression_vertical_bar_exclusive_or_expression_t;
class logical_and_expression_inclusive_or_expression_t;
class logical_and_expression_logical_and_expression_and_op_inclusive_or_expression_t;
class logical_xor_expression_logical_and_expression_t;
class logical_xor_expression_logical_xor_expression_xor_op_logical_and_expression_t;
class logical_or_expression_logical_xor_expression_t;
class logical_or_expression_logical_or_expression_or_op_logical_xor_expression_t;
class conditional_expression_logical_or_expression_t;
class conditional_expression_logical_or_expression_question_expression_colon_assignment_expression_t;
class assignment_expression_conditional_expression_t;
class assignment_expression_unary_expression_assignment_operator_assignment_expression_t;
class assignment_operator_equal_t;
class assignment_operator_mul_assign_t;
class assignment_operator_div_assign_t;
class assignment_operator_mod_assign_t;
class assignment_operator_add_assign_t;
class assignment_operator_sub_assign_t;
class assignment_operator_left_assign_t;
class assignment_operator_right_assign_t;
class assignment_operator_and_assign_t;
class assignment_operator_xor_assign_t;
class assignment_operator_or_assign_t;
class expression_assignment_expression_t;
class expression_expression_comma_assignment_expression_t;
class constant_expression_conditional_expression_t;
class declaration_function_prototype_semicolon_t;
class declaration_init_declarator_list_semicolon_t;
class declaration_precision_precision_qualifier_type_specifier_semicolon_t;
class declaration_type_qualifier_identifier_left_brace_struct_declaration_list_right_brace_semicolon_t;
class declaration_type_qualifier_identifier_left_brace_struct_declaration_list_right_brace_identifier_semicolon_t;
class declaration_type_qualifier_identifier_left_brace_struct_declaration_list_right_brace_identifier_array_specifier_semicolon_t;
class declaration_type_qualifier_semicolon_t;
class declaration_type_qualifier_identifier_semicolon_t;
class declaration_type_qualifier_identifier_identifier_list_semicolon_t;
class identifier_list_comma_identifier_t;
class identifier_list_identifier_list_comma_identifier_t;
class function_prototype_function_declarator_right_paren_t;
class function_declarator_function_header_t;
class function_declarator_function_header_with_parameters_t;
class function_header_with_parameters_function_header_parameter_declaration_t;
class function_header_with_parameters_function_header_with_parameters_comma_parameter_declaration_t;
class function_header_fully_specified_type_identifier_left_paren_t;
class parameter_declarator_type_specifier_identifier_t;
class parameter_declarator_type_specifier_identifier_array_specifier_t;
class parameter_declaration_type_qualifier_parameter_declarator_t;
class parameter_declaration_parameter_declarator_t;
class parameter_declaration_type_qualifier_parameter_type_specifier_t;
class parameter_declaration_parameter_type_specifier_t;
class parameter_type_specifier_type_specifier_t;
class init_declarator_list_single_declaration_t;
class init_declarator_list_init_declarator_list_comma_identifier_t;
class init_declarator_list_init_declarator_list_comma_identifier_array_specifier_t;
class init_declarator_list_init_declarator_list_comma_identifier_array_specifier_equal_initializer_t;
class init_declarator_list_init_declarator_list_comma_identifier_equal_initializer_t;
class single_declaration_fully_specified_type_t;
class single_declaration_fully_specified_type_identifier_t;
class single_declaration_fully_specified_type_identifier_array_specifier_t;
class single_declaration_fully_specified_type_identifier_array_specifier_equal_initializer_t;
class single_declaration_fully_specified_type_identifier_equal_initializer_t;
class fully_specified_type_type_specifier_t;
class fully_specified_type_type_qualifier_type_specifier_t;
class invariant_qualifier_invariant_t;
class interpolation_qualifier_smooth_t;
class interpolation_qualifier_flat_t;
class interpolation_qualifier_noperspective_t;
class layout_qualifier_layout_left_paren_layout_qualifier_id_list_right_paren_t;
class layout_qualifier_id_list_layout_qualifier_id_t;
class layout_qualifier_id_list_layout_qualifier_id_list_comma_layout_qualifier_id_t;
class layout_qualifier_id_identifier_t;
class layout_qualifier_id_identifier_equal_constant_expression_t;
class layout_qualifier_id_shared_t;
class precise_qualifier_precise_t;
class type_qualifier_single_type_qualifier_t;
class type_qualifier_type_qualifier_single_type_qualifier_t;
class single_type_qualifier_storage_qualifier_t;
class single_type_qualifier_layout_qualifier_t;
class single_type_qualifier_precision_qualifier_t;
class single_type_qualifier_interpolation_qualifier_t;
class single_type_qualifier_invariant_qualifier_t;
class single_type_qualifier_precise_qualifier_t;
class storage_qualifier_const_t;
class storage_qualifier_inout_t;
class storage_qualifier_in_t;
class storage_qualifier_out_t;
class storage_qualifier_centroid_t;
class storage_qualifier_patch_t;
class storage_qualifier_sample_t;
class storage_qualifier_uniform_t;
class storage_qualifier_buffer_t;
class storage_qualifier_shared_t;
class storage_qualifier_coherent_t;
class storage_qualifier_volatile_t;
class storage_qualifier_restrict_t;
class storage_qualifier_readonly_t;
class storage_qualifier_writeonly_t;
class storage_qualifier_subroutine_t;
class storage_qualifier_subroutine_left_paren_type_name_list_right_paren_t;
class type_name_list_type_name_t;
class type_name_list_type_name_list_comma_type_name_t;
class type_specifier_type_specifier_nonarray_t;
class type_specifier_type_specifier_nonarray_array_specifier_t;
class array_specifier_left_bracket_right_bracket_t;
class array_specifier_left_bracket_conditional_expression_right_bracket_t;
class array_specifier_array_specifier_left_bracket_right_bracket_t;
class array_specifier_array_specifier_left_bracket_conditional_expression_right_bracket_t;
class type_specifier_nonarray_void_t;
class type_specifier_nonarray_float_t;
class type_specifier_nonarray_double_t;
class type_specifier_nonarray_int_t;
class type_specifier_nonarray_uint_t;
class type_specifier_nonarray_bool_t;
class type_specifier_nonarray_vec2_t;
class type_specifier_nonarray_vec3_t;
class type_specifier_nonarray_vec4_t;
class type_specifier_nonarray_dvec2_t;
class type_specifier_nonarray_dvec3_t;
class type_specifier_nonarray_dvec4_t;
class type_specifier_nonarray_bvec2_t;
class type_specifier_nonarray_bvec3_t;
class type_specifier_nonarray_bvec4_t;
class type_specifier_nonarray_ivec2_t;
class type_specifier_nonarray_ivec3_t;
class type_specifier_nonarray_ivec4_t;
class type_specifier_nonarray_uvec2_t;
class type_specifier_nonarray_uvec3_t;
class type_specifier_nonarray_uvec4_t;
class type_specifier_nonarray_mat2_t;
class type_specifier_nonarray_mat3_t;
class type_specifier_nonarray_mat4_t;
class type_specifier_nonarray_mat2x2_t;
class type_specifier_nonarray_mat2x3_t;
class type_specifier_nonarray_mat2x4_t;
class type_specifier_nonarray_mat3x2_t;
class type_specifier_nonarray_mat3x3_t;
class type_specifier_nonarray_mat3x4_t;
class type_specifier_nonarray_mat4x2_t;
class type_specifier_nonarray_mat4x3_t;
class type_specifier_nonarray_mat4x4_t;
class type_specifier_nonarray_dmat2_t;
class type_specifier_nonarray_dmat3_t;
class type_specifier_nonarray_dmat4_t;
class type_specifier_nonarray_dmat2x2_t;
class type_specifier_nonarray_dmat2x3_t;
class type_specifier_nonarray_dmat2x4_t;
class type_specifier_nonarray_dmat3x2_t;
class type_specifier_nonarray_dmat3x3_t;
class type_specifier_nonarray_dmat3x4_t;
class type_specifier_nonarray_dmat4x2_t;
class type_specifier_nonarray_dmat4x3_t;
class type_specifier_nonarray_dmat4x4_t;
class type_specifier_nonarray_atomic_uint_t;
class type_specifier_nonarray_sampler1d_t;
class type_specifier_nonarray_sampler2d_t;
class type_specifier_nonarray_sampler3d_t;
class type_specifier_nonarray_samplercube_t;
class type_specifier_nonarray_sampler1dshadow_t;
class type_specifier_nonarray_sampler2dshadow_t;
class type_specifier_nonarray_samplercubeshadow_t;
class type_specifier_nonarray_sampler1darray_t;
class type_specifier_nonarray_sampler2darray_t;
class type_specifier_nonarray_sampler1darrayshadow_t;
class type_specifier_nonarray_sampler2darrayshadow_t;
class type_specifier_nonarray_samplercubearray_t;
class type_specifier_nonarray_samplercubearrayshadow_t;
class type_specifier_nonarray_isampler1d_t;
class type_specifier_nonarray_isampler2d_t;
class type_specifier_nonarray_isampler3d_t;
class type_specifier_nonarray_isamplercube_t;
class type_specifier_nonarray_isampler1darray_t;
class type_specifier_nonarray_isampler2darray_t;
class type_specifier_nonarray_isamplercubearray_t;
class type_specifier_nonarray_usampler1d_t;
class type_specifier_nonarray_usampler2d_t;
class type_specifier_nonarray_usampler3d_t;
class type_specifier_nonarray_usamplercube_t;
class type_specifier_nonarray_usampler1darray_t;
class type_specifier_nonarray_usampler2darray_t;
class type_specifier_nonarray_usamplercubearray_t;
class type_specifier_nonarray_sampler2drect_t;
class type_specifier_nonarray_sampler2drectshadow_t;
class type_specifier_nonarray_isampler2drect_t;
class type_specifier_nonarray_usampler2drect_t;
class type_specifier_nonarray_samplerbuffer_t;
class type_specifier_nonarray_isamplerbuffer_t;
class type_specifier_nonarray_usamplerbuffer_t;
class type_specifier_nonarray_sampler2dms_t;
class type_specifier_nonarray_isampler2dms_t;
class type_specifier_nonarray_usampler2dms_t;
class type_specifier_nonarray_sampler2dmsarray_t;
class type_specifier_nonarray_isampler2dmsarray_t;
class type_specifier_nonarray_usampler2dmsarray_t;
class type_specifier_nonarray_image1d_t;
class type_specifier_nonarray_iimage1d_t;
class type_specifier_nonarray_uimage1d_t;
class type_specifier_nonarray_image2d_t;
class type_specifier_nonarray_iimage2d_t;
class type_specifier_nonarray_uimage2d_t;
class type_specifier_nonarray_image3d_t;
class type_specifier_nonarray_iimage3d_t;
class type_specifier_nonarray_uimage3d_t;
class type_specifier_nonarray_image2drect_t;
class type_specifier_nonarray_iimage2drect_t;
class type_specifier_nonarray_uimage2drect_t;
class type_specifier_nonarray_imagecube_t;
class type_specifier_nonarray_iimagecube_t;
class type_specifier_nonarray_uimagecube_t;
class type_specifier_nonarray_imagebuffer_t;
class type_specifier_nonarray_iimagebuffer_t;
class type_specifier_nonarray_uimagebuffer_t;
class type_specifier_nonarray_image1darray_t;
class type_specifier_nonarray_iimage1darray_t;
class type_specifier_nonarray_uimage1darray_t;
class type_specifier_nonarray_image2darray_t;
class type_specifier_nonarray_iimage2darray_t;
class type_specifier_nonarray_uimage2darray_t;
class type_specifier_nonarray_imagecubearray_t;
class type_specifier_nonarray_iimagecubearray_t;
class type_specifier_nonarray_uimagecubearray_t;
class type_specifier_nonarray_image2dms_t;
class type_specifier_nonarray_iimage2dms_t;
class type_specifier_nonarray_uimage2dms_t;
class type_specifier_nonarray_image2dmsarray_t;
class type_specifier_nonarray_iimage2dmsarray_t;
class type_specifier_nonarray_uimage2dmsarray_t;
class type_specifier_nonarray_struct_specifier_t;
class type_specifier_nonarray_type_name_t;
class precision_qualifier_high_precision_t;
class precision_qualifier_medium_precision_t;
class precision_qualifier_low_precision_t;
class struct_specifier_struct_identifier_left_brace_struct_declaration_list_right_brace_t;
class struct_specifier_struct_left_brace_struct_declaration_list_right_brace_t;
class struct_declaration_list_struct_declaration_t;
class struct_declaration_list_struct_declaration_list_struct_declaration_t;
class struct_declaration_type_specifier_struct_declarator_list_semicolon_t;
class struct_declaration_type_qualifier_type_specifier_struct_declarator_list_semicolon_t;
class struct_declarator_list_struct_declarator_t;
class struct_declarator_list_struct_declarator_list_comma_struct_declarator_t;
class struct_declarator_identifier_t;
class struct_declarator_identifier_array_specifier_t;
class initializer_assignment_expression_t;
class initializer_left_brace_initializer_list_right_brace_t;
class initializer_left_brace_initializer_list_comma_right_brace_t;
class initializer_list_initializer_t;
class initializer_list_initializer_list_comma_initializer_t;
class declaration_statement_declaration_t;
class statement_compound_statement_t;
class statement_simple_statement_t;
class simple_statement_declaration_statement_t;
class simple_statement_expression_statement_t;
class simple_statement_selection_statement_t;
class simple_statement_switch_statement_t;
class simple_statement_case_label_t;
class simple_statement_iteration_statement_t;
class simple_statement_jump_statement_t;
class compound_statement_left_brace_right_brace_t;
class compound_statement_left_brace_statement_list_right_brace_t;
class statement_no_new_scope_compound_statement_no_new_scope_t;
class statement_no_new_scope_simple_statement_t;
class compound_statement_no_new_scope_left_brace_right_brace_t;
class compound_statement_no_new_scope_left_brace_statement_list_right_brace_t;
class statement_list_statement_t;
class statement_list_statement_list_statement_t;
class expression_statement_semicolon_t;
class expression_statement_expression_semicolon_t;
class selection_statement_if_left_paren_expression_right_paren_selection_rest_statement_t;
class selection_rest_statement_statement_else_statement_t;
class selection_rest_statement_statement_t;
class condition_expression_t;
class condition_fully_specified_type_identifier_equal_initializer_t;
class switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t;
class switch_statement_list_nothing_t;
class switch_statement_list_statement_list_t;
class case_label_case_expression_colon_t;
class case_label_default_colon_t;
class iteration_statement_while_left_paren_condition_right_paren_statement_no_new_scope_t;
class iteration_statement_do_statement_while_left_paren_expression_right_paren_semicolon_t;
class iteration_statement_for_left_paren_for_init_statement_for_rest_statement_right_paren_statement_no_new_scope_t;
class for_init_statement_expression_statement_t;
class for_init_statement_declaration_statement_t;
class conditionopt_condition_t;
class conditionopt_nothing_t;
class for_rest_statement_conditionopt_semicolon_t;
class for_rest_statement_conditionopt_semicolon_expression_t;
class jump_statement_continue_semicolon_t;
class jump_statement_break_semicolon_t;
class jump_statement_return_semicolon_t;
class jump_statement_return_expression_semicolon_t;
class jump_statement_discard_semicolon_t;
class translation_unit_external_declaration_t;
class translation_unit_translation_unit_external_declaration_t;
class external_declaration_function_definition_t;
class external_declaration_declaration_t;
class external_declaration_semicolon_t;
class function_definition_function_prototype_compound_statement_no_new_scope_t;
class ast_t;

struct empty_visitor_t {
  virtual ~empty_visitor_t() = default;
};  // empty_visitor_t

struct default_visitor_t: public empty_visitor_t {
  virtual ~default_visitor_t() = default;
  virtual void operator()(const variable_identifier_identifier_t *) const = 0;
  virtual void operator()(const primary_expression_variable_identifier_t *) const = 0;
  virtual void operator()(const primary_expression_intconstant_t *) const = 0;
  virtual void operator()(const primary_expression_uintconstant_t *) const = 0;
  virtual void operator()(const primary_expression_floatconstant_t *) const = 0;
  virtual void operator()(const primary_expression_boolconstant_t *) const = 0;
  virtual void operator()(const primary_expression_doubleconstant_t *) const = 0;
  virtual void operator()(const primary_expression_left_paren_expression_right_paren_t *) const = 0;
  virtual void operator()(const postfix_expression_primary_expression_t *) const = 0;
  virtual void operator()(const postfix_expression_postfix_expression_left_bracket_integer_expression_right_bracket_t *) const = 0;
  virtual void operator()(const postfix_expression_function_call_t *) const = 0;
  virtual void operator()(const postfix_expression_postfix_expression_dot_field_selection_t *) const = 0;
  virtual void operator()(const postfix_expression_postfix_expression_inc_op_t *) const = 0;
  virtual void operator()(const postfix_expression_postfix_expression_dec_op_t *) const = 0;
  virtual void operator()(const integer_expression_expression_t *) const = 0;
  virtual void operator()(const function_call_function_call_or_method_t *) const = 0;
  virtual void operator()(const function_call_or_method_function_call_generic_t *) const = 0;
  virtual void operator()(const function_call_generic_function_call_header_with_parameters_right_paren_t *) const = 0;
  virtual void operator()(const function_call_generic_function_call_header_no_parameters_right_paren_t *) const = 0;
  virtual void operator()(const function_call_header_no_parameters_function_call_header_void_t *) const = 0;
  virtual void operator()(const function_call_header_no_parameters_function_call_header_t *) const = 0;
  virtual void operator()(const function_call_header_with_parameters_function_call_header_assignment_expression_t *) const = 0;
  virtual void operator()(const function_call_header_with_parameters_function_call_header_with_parameters_comma_assignment_expression_t *) const = 0;
  virtual void operator()(const function_call_header_function_identifier_left_paren_t *) const = 0;
  virtual void operator()(const function_identifier_type_specifier_t *) const = 0;
  virtual void operator()(const function_identifier_postfix_expression_t *) const = 0;
  virtual void operator()(const unary_expression_postfix_expression_t *) const = 0;
  virtual void operator()(const unary_expression_inc_op_unary_expression_t *) const = 0;
  virtual void operator()(const unary_expression_dec_op_unary_expression_t *) const = 0;
  virtual void operator()(const unary_expression_unary_operator_unary_expression_t *) const = 0;
  virtual void operator()(const unary_operator_plus_t *) const = 0;
  virtual void operator()(const unary_operator_dash_t *) const = 0;
  virtual void operator()(const unary_operator_bang_t *) const = 0;
  virtual void operator()(const unary_operator_tilde_t *) const = 0;
  virtual void operator()(const multiplicative_expression_unary_expression_t *) const = 0;
  virtual void operator()(const multiplicative_expression_multiplicative_expression_star_unary_expression_t *) const = 0;
  virtual void operator()(const multiplicative_expression_multiplicative_expression_slash_unary_expression_t *) const = 0;
  virtual void operator()(const multiplicative_expression_multiplicative_expression_percent_unary_expression_t *) const = 0;
  virtual void operator()(const additive_expression_multiplicative_expression_t *) const = 0;
  virtual void operator()(const additive_expression_additive_expression_plus_multiplicative_expression_t *) const = 0;
  virtual void operator()(const additive_expression_additive_expression_dash_multiplicative_expression_t *) const = 0;
  virtual void operator()(const shift_expression_additive_expression_t *) const = 0;
  virtual void operator()(const shift_expression_shift_expression_left_op_additive_expression_t *) const = 0;
  virtual void operator()(const shift_expression_shift_expression_right_op_additive_expression_t *) const = 0;
  virtual void operator()(const relational_expression_shift_expression_t *) const = 0;
  virtual void operator()(const relational_expression_relational_expression_left_angle_shift_expression_t *) const = 0;
  virtual void operator()(const relational_expression_relational_expression_right_angle_shift_expression_t *) const = 0;
  virtual void operator()(const relational_expression_relational_expression_le_op_shift_expression_t *) const = 0;
  virtual void operator()(const relational_expression_relational_expression_ge_op_shift_expression_t *) const = 0;
  virtual void operator()(const equality_expression_relational_expression_t *) const = 0;
  virtual void operator()(const equality_expression_equality_expression_eq_op_relational_expression_t *) const = 0;
  virtual void operator()(const equality_expression_equality_expression_ne_op_relational_expression_t *) const = 0;
  virtual void operator()(const and_expression_equality_expression_t *) const = 0;
  virtual void operator()(const and_expression_and_expression_ampersand_equality_expression_t *) const = 0;
  virtual void operator()(const exclusive_or_expression_and_expression_t *) const = 0;
  virtual void operator()(const exclusive_or_expression_exclusive_or_expression_caret_and_expression_t *) const = 0;
  virtual void operator()(const inclusive_or_expression_exclusive_or_expression_t *) const = 0;
  virtual void operator()(const inclusive_or_expression_inclusive_or_expression_vertical_bar_exclusive_or_expression_t *) const = 0;
  virtual void operator()(const logical_and_expression_inclusive_or_expression_t *) const = 0;
  virtual void operator()(const logical_and_expression_logical_and_expression_and_op_inclusive_or_expression_t *) const = 0;
  virtual void operator()(const logical_xor_expression_logical_and_expression_t *) const = 0;
  virtual void operator()(const logical_xor_expression_logical_xor_expression_xor_op_logical_and_expression_t *) const = 0;
  virtual void operator()(const logical_or_expression_logical_xor_expression_t *) const = 0;
  virtual void operator()(const logical_or_expression_logical_or_expression_or_op_logical_xor_expression_t *) const = 0;
  virtual void operator()(const conditional_expression_logical_or_expression_t *) const = 0;
  virtual void operator()(const conditional_expression_logical_or_expression_question_expression_colon_assignment_expression_t *) const = 0;
  virtual void operator()(const assignment_expression_conditional_expression_t *) const = 0;
  virtual void operator()(const assignment_expression_unary_expression_assignment_operator_assignment_expression_t *) const = 0;
  virtual void operator()(const assignment_operator_equal_t *) const = 0;
  virtual void operator()(const assignment_operator_mul_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_div_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_mod_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_add_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_sub_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_left_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_right_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_and_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_xor_assign_t *) const = 0;
  virtual void operator()(const assignment_operator_or_assign_t *) const = 0;
  virtual void operator()(const expression_assignment_expression_t *) const = 0;
  virtual void operator()(const expression_expression_comma_assignment_expression_t *) const = 0;
  virtual void operator()(const constant_expression_conditional_expression_t *) const = 0;
  virtual void operator()(const declaration_function_prototype_semicolon_t *) const = 0;
  virtual void operator()(const declaration_init_declarator_list_semicolon_t *) const = 0;
  virtual void operator()(const declaration_precision_precision_qualifier_type_specifier_semicolon_t *) const = 0;
  virtual void operator()(const declaration_type_qualifier_identifier_left_brace_struct_declaration_list_right_brace_semicolon_t *) const = 0;
  virtual void operator()(const declaration_type_qualifier_identifier_left_brace_struct_declaration_list_right_brace_identifier_semicolon_t *) const = 0;
  virtual void operator()(const declaration_type_qualifier_identifier_left_brace_struct_declaration_list_right_brace_identifier_array_specifier_semicolon_t *) const = 0;
  virtual void operator()(const declaration_type_qualifier_semicolon_t *) const = 0;
  virtual void operator()(const declaration_type_qualifier_identifier_semicolon_t *) const = 0;
  virtual void operator()(const declaration_type_qualifier_identifier_identifier_list_semicolon_t *) const = 0;
  virtual void operator()(const identifier_list_comma_identifier_t *) const = 0;
  virtual void operator()(const identifier_list_identifier_list_comma_identifier_t *) const = 0;
  virtual void operator()(const function_prototype_function_declarator_right_paren_t *) const = 0;
  virtual void operator()(const function_declarator_function_header_t *) const = 0;
  virtual void operator()(const function_declarator_function_header_with_parameters_t *) const = 0;
  virtual void operator()(const function_header_with_parameters_function_header_parameter_declaration_t *) const = 0;
  virtual void operator()(const function_header_with_parameters_function_header_with_parameters_comma_parameter_declaration_t *) const = 0;
  virtual void operator()(const function_header_fully_specified_type_identifier_left_paren_t *) const = 0;
  virtual void operator()(const parameter_declarator_type_specifier_identifier_t *) const = 0;
  virtual void operator()(const parameter_declarator_type_specifier_identifier_array_specifier_t *) const = 0;
  virtual void operator()(const parameter_declaration_type_qualifier_parameter_declarator_t *) const = 0;
  virtual void operator()(const parameter_declaration_parameter_declarator_t *) const = 0;
  virtual void operator()(const parameter_declaration_type_qualifier_parameter_type_specifier_t *) const = 0;
  virtual void operator()(const parameter_declaration_parameter_type_specifier_t *) const = 0;
  virtual void operator()(const parameter_type_specifier_type_specifier_t *) const = 0;
  virtual void operator()(const init_declarator_list_single_declaration_t *) const = 0;
  virtual void operator()(const init_declarator_list_init_declarator_list_comma_identifier_t *) const = 0;
  virtual void operator()(const init_declarator_list_init_declarator_list_comma_identifier_array_specifier_t *) const = 0;
  virtual void operator()(const init_declarator_list_init_declarator_list_comma_identifier_array_specifier_equal_initializer_t *) const = 0;
  virtual void operator()(const init_declarator_list_init_declarator_list_comma_identifier_equal_initializer_t *) const = 0;
  virtual void operator()(const single_declaration_fully_specified_type_t *) const = 0;
  virtual void operator()(const single_declaration_fully_specified_type_identifier_t *) const = 0;
  virtual void operator()(const single_declaration_fully_specified_type_identifier_array_specifier_t *) const = 0;
  virtual void operator()(const single_declaration_fully_specified_type_identifier_array_specifier_equal_initializer_t *) const = 0;
  virtual void operator()(const single_declaration_fully_specified_type_identifier_equal_initializer_t *) const = 0;
  virtual void operator()(const fully_specified_type_type_specifier_t *) const = 0;
  virtual void operator()(const fully_specified_type_type_qualifier_type_specifier_t *) const = 0;
  virtual void operator()(const invariant_qualifier_invariant_t *) const = 0;
  virtual void operator()(const interpolation_qualifier_smooth_t *) const = 0;
  virtual void operator()(const interpolation_qualifier_flat_t *) const = 0;
  virtual void operator()(const interpolation_qualifier_noperspective_t *) const = 0;
  virtual void operator()(const layout_qualifier_layout_left_paren_layout_qualifier_id_list_right_paren_t *) const = 0;
  virtual void operator()(const layout_qualifier_id_list_layout_qualifier_id_t *) const = 0;
  virtual void operator()(const layout_qualifier_id_list_layout_qualifier_id_list_comma_layout_qualifier_id_t *) const = 0;
  virtual void operator()(const layout_qualifier_id_identifier_t *) const = 0;
  virtual void operator()(const layout_qualifier_id_identifier_equal_constant_expression_t *) const = 0;
  virtual void operator()(const layout_qualifier_id_shared_t *) const = 0;
  virtual void operator()(const precise_qualifier_precise_t *) const = 0;
  virtual void operator()(const type_qualifier_single_type_qualifier_t *) const = 0;
  virtual void operator()(const type_qualifier_type_qualifier_single_type_qualifier_t *) const = 0;
  virtual void operator()(const single_type_qualifier_storage_qualifier_t *) const = 0;
  virtual void operator()(const single_type_qualifier_layout_qualifier_t *) const = 0;
  virtual void operator()(const single_type_qualifier_precision_qualifier_t *) const = 0;
  virtual void operator()(const single_type_qualifier_interpolation_qualifier_t *) const = 0;
  virtual void operator()(const single_type_qualifier_invariant_qualifier_t *) const = 0;
  virtual void operator()(const single_type_qualifier_precise_qualifier_t *) const = 0;
  virtual void operator()(const storage_qualifier_const_t *) const = 0;
  virtual void operator()(const storage_qualifier_inout_t *) const = 0;
  virtual void operator()(const storage_qualifier_in_t *) const = 0;
  virtual void operator()(const storage_qualifier_out_t *) const = 0;
  virtual void operator()(const storage_qualifier_centroid_t *) const = 0;
  virtual void operator()(const storage_qualifier_patch_t *) const = 0;
  virtual void operator()(const storage_qualifier_sample_t *) const = 0;
  virtual void operator()(const storage_qualifier_uniform_t *) const = 0;
  virtual void operator()(const storage_qualifier_buffer_t *) const = 0;
  virtual void operator()(const storage_qualifier_shared_t *) const = 0;
  virtual void operator()(const storage_qualifier_coherent_t *) const = 0;
  virtual void operator()(const storage_qualifier_volatile_t *) const = 0;
  virtual void operator()(const storage_qualifier_restrict_t *) const = 0;
  virtual void operator()(const storage_qualifier_readonly_t *) const = 0;
  virtual void operator()(const storage_qualifier_writeonly_t *) const = 0;
  virtual void operator()(const storage_qualifier_subroutine_t *) const = 0;
  virtual void operator()(const storage_qualifier_subroutine_left_paren_type_name_list_right_paren_t *) const = 0;
  virtual void operator()(const type_name_list_type_name_t *) const = 0;
  virtual void operator()(const type_name_list_type_name_list_comma_type_name_t *) const = 0;
  virtual void operator()(const type_specifier_type_specifier_nonarray_t *) const = 0;
  virtual void operator()(const type_specifier_type_specifier_nonarray_array_specifier_t *) const = 0;
  virtual void operator()(const array_specifier_left_bracket_right_bracket_t *) const = 0;
  virtual void operator()(const array_specifier_left_bracket_conditional_expression_right_bracket_t *) const = 0;
  virtual void operator()(const array_specifier_array_specifier_left_bracket_right_bracket_t *) const = 0;
  virtual void operator()(const array_specifier_array_specifier_left_bracket_conditional_expression_right_bracket_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_void_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_float_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_double_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_int_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uint_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_bool_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_vec2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_vec3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_vec4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dvec2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dvec3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dvec4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_bvec2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_bvec3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_bvec4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_ivec2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_ivec3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_ivec4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uvec2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uvec3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uvec4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat2x2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat2x3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat2x4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat3x2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat3x3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat3x4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat4x2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat4x3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_mat4x4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat2x2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat2x3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat2x4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat3x2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat3x3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat3x4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat4x2_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat4x3_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_dmat4x4_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_atomic_uint_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler1d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler3d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_samplercube_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler1dshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2dshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_samplercubeshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler1darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler1darrayshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2darrayshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_samplercubearray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_samplercubearrayshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler1d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler2d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler3d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isamplercube_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler1darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler2darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isamplercubearray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler1d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler2d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler3d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usamplercube_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler1darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler2darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usamplercubearray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2drect_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2drectshadow_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler2drect_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler2drect_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_samplerbuffer_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isamplerbuffer_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usamplerbuffer_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2dms_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler2dms_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler2dms_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_sampler2dmsarray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_isampler2dmsarray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_usampler2dmsarray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image1d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage1d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage1d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image2d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage2d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage2d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image3d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage3d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage3d_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image2drect_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage2drect_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage2drect_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_imagecube_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimagecube_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimagecube_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_imagebuffer_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimagebuffer_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimagebuffer_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image1darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage1darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage1darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image2darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage2darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage2darray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_imagecubearray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimagecubearray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimagecubearray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image2dms_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage2dms_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage2dms_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_image2dmsarray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_iimage2dmsarray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_uimage2dmsarray_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_struct_specifier_t *) const = 0;
  virtual void operator()(const type_specifier_nonarray_type_name_t *) const = 0;
  virtual void operator()(const precision_qualifier_high_precision_t *) const = 0;
  virtual void operator()(const precision_qualifier_medium_precision_t *) const = 0;
  virtual void operator()(const precision_qualifier_low_precision_t *) const = 0;
  virtual void operator()(const struct_specifier_struct_identifier_left_brace_struct_declaration_list_right_brace_t *) const = 0;
  virtual void operator()(const struct_specifier_struct_left_brace_struct_declaration_list_right_brace_t *) const = 0;
  virtual void operator()(const struct_declaration_list_struct_declaration_t *) const = 0;
  virtual void operator()(const struct_declaration_list_struct_declaration_list_struct_declaration_t *) const = 0;
  virtual void operator()(const struct_declaration_type_specifier_struct_declarator_list_semicolon_t *) const = 0;
  virtual void operator()(const struct_declaration_type_qualifier_type_specifier_struct_declarator_list_semicolon_t *) const = 0;
  virtual void operator()(const struct_declarator_list_struct_declarator_t *) const = 0;
  virtual void operator()(const struct_declarator_list_struct_declarator_list_comma_struct_declarator_t *) const = 0;
  virtual void operator()(const struct_declarator_identifier_t *) const = 0;
  virtual void operator()(const struct_declarator_identifier_array_specifier_t *) const = 0;
  virtual void operator()(const initializer_assignment_expression_t *) const = 0;
  virtual void operator()(const initializer_left_brace_initializer_list_right_brace_t *) const = 0;
  virtual void operator()(const initializer_left_brace_initializer_list_comma_right_brace_t *) const = 0;
  virtual void operator()(const initializer_list_initializer_t *) const = 0;
  virtual void operator()(const initializer_list_initializer_list_comma_initializer_t *) const = 0;
  virtual void operator()(const declaration_statement_declaration_t *) const = 0;
  virtual void operator()(const statement_compound_statement_t *) const = 0;
  virtual void operator()(const statement_simple_statement_t *) const = 0;
  virtual void operator()(const simple_statement_declaration_statement_t *) const = 0;
  virtual void operator()(const simple_statement_expression_statement_t *) const = 0;
  virtual void operator()(const simple_statement_selection_statement_t *) const = 0;
  virtual void operator()(const simple_statement_switch_statement_t *) const = 0;
  virtual void operator()(const simple_statement_case_label_t *) const = 0;
  virtual void operator()(const simple_statement_iteration_statement_t *) const = 0;
  virtual void operator()(const simple_statement_jump_statement_t *) const = 0;
  virtual void operator()(const compound_statement_left_brace_right_brace_t *) const = 0;
  virtual void operator()(const compound_statement_left_brace_statement_list_right_brace_t *) const = 0;
  virtual void operator()(const statement_no_new_scope_compound_statement_no_new_scope_t *) const = 0;
  virtual void operator()(const statement_no_new_scope_simple_statement_t *) const = 0;
  virtual void operator()(const compound_statement_no_new_scope_left_brace_right_brace_t *) const = 0;
  virtual void operator()(const compound_statement_no_new_scope_left_brace_statement_list_right_brace_t *) const = 0;
  virtual void operator()(const statement_list_statement_t *) const = 0;
  virtual void operator()(const statement_list_statement_list_statement_t *) const = 0;
  virtual void operator()(const expression_statement_semicolon_t *) const = 0;
  virtual void operator()(const expression_statement_expression_semicolon_t *) const = 0;
  virtual void operator()(const selection_statement_if_left_paren_expression_right_paren_selection_rest_statement_t *) const = 0;
  virtual void operator()(const selection_rest_statement_statement_else_statement_t *) const = 0;
  virtual void operator()(const selection_rest_statement_statement_t *) const = 0;
  virtual void operator()(const condition_expression_t *) const = 0;
  virtual void operator()(const condition_fully_specified_type_identifier_equal_initializer_t *) const = 0;
  virtual void operator()(const switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t *) const = 0;
  virtual void operator()(const switch_statement_list_nothing_t *) const = 0;
  virtual void operator()(const switch_statement_list_statement_list_t *) const = 0;
  virtual void operator()(const case_label_case_expression_colon_t *) const = 0;
  virtual void operator()(const case_label_default_colon_t *) const = 0;
  virtual void operator()(const iteration_statement_while_left_paren_condition_right_paren_statement_no_new_scope_t *) const = 0;
  virtual void operator()(const iteration_statement_do_statement_while_left_paren_expression_right_paren_semicolon_t *) const = 0;
  virtual void operator()(const iteration_statement_for_left_paren_for_init_statement_for_rest_statement_right_paren_statement_no_new_scope_t *) const = 0;
  virtual void operator()(const for_init_statement_expression_statement_t *) const = 0;
  virtual void operator()(const for_init_statement_declaration_statement_t *) const = 0;
  virtual void operator()(const conditionopt_condition_t *) const = 0;
  virtual void operator()(const conditionopt_nothing_t *) const = 0;
  virtual void operator()(const for_rest_statement_conditionopt_semicolon_t *) const = 0;
  virtual void operator()(const for_rest_statement_conditionopt_semicolon_expression_t *) const = 0;
  virtual void operator()(const jump_statement_continue_semicolon_t *) const = 0;
  virtual void operator()(const jump_statement_break_semicolon_t *) const = 0;
  virtual void operator()(const jump_statement_return_semicolon_t *) const = 0;
  virtual void operator()(const jump_statement_return_expression_semicolon_t *) const = 0;
  virtual void operator()(const jump_statement_discard_semicolon_t *) const = 0;
  virtual void operator()(const translation_unit_external_declaration_t *) const = 0;
  virtual void operator()(const translation_unit_translation_unit_external_declaration_t *) const = 0;
  virtual void operator()(const external_declaration_function_definition_t *) const = 0;
  virtual void operator()(const external_declaration_declaration_t *) const = 0;
  virtual void operator()(const external_declaration_semicolon_t *) const = 0;
  virtual void operator()(const function_definition_function_prototype_compound_statement_no_new_scope_t *) const = 0;
};  // default_visitor_t

}   // ast

}   // gliss
