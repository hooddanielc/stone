#pragma once

namespace gliss {

enum symbol_t {
  reserved_keyword = 298,
  attribute = 297,
  varying = 296,
  end = 295,
  struct_ = 0,
  void_ = 1,
  while_ = 2,
  identifier = 3,
  type_name = 4,
  floatconstant = 5,
  doubleconstant = 6,
  intconstant = 7,
  uintconstant = 8,
  boolconstant = 9,
  field_selection = 10,
  left_op = 11,
  right_op = 12,
  inc_op = 13,
  dec_op = 14,
  le_op = 15,
  ge_op = 16,
  eq_op = 17,
  ne_op = 18,
  and_op = 19,
  or_op = 20,
  xor_op = 21,
  mul_assign = 22,
  div_assign = 23,
  add_assign = 24,
  mod_assign = 25,
  left_assign = 26,
  right_assign = 27,
  and_assign = 28,
  xor_assign = 29,
  or_assign = 30,
  sub_assign = 31,
  left_paren = 32,
  right_paren = 33,
  left_bracket = 34,
  right_bracket = 35,
  left_brace = 36,
  right_brace = 37,
  dot = 38,
  comma = 39,
  colon = 40,
  equal = 41,
  semicolon = 42,
  bang = 43,
  dash = 44,
  tilde = 45,
  plus = 46,
  star = 47,
  slash = 48,
  percent = 49,
  left_angle = 50,
  right_angle = 51,
  vertical_bar = 52,
  caret = 53,
  ampersand = 54,
  question = 55,
  invariant = 56,
  precise = 57,
  high_precision = 58,
  medium_precision = 59,
  low_precision = 60,
  precision = 61,
  const_ = 62,
  bool_ = 63,
  float_ = 64,
  double_ = 65,
  int_ = 66,
  uint_ = 67,
  break_ = 68,
  continue_ = 69,
  do_ = 70,
  else_ = 71,
  for_ = 72,
  if_ = 73,
  discard = 74,
  return_ = 75,
  switch_ = 76,
  case_ = 77,
  default_ = 78,
  subroutine = 79,
  bvec2 = 80,
  bvec3 = 81,
  bvec4 = 82,
  ivec2 = 83,
  ivec3 = 84,
  ivec4 = 85,
  uvec2 = 86,
  uvec3 = 87,
  uvec4 = 88,
  vec2 = 89,
  vec3 = 90,
  vec4 = 91,
  mat2 = 92,
  mat3 = 93,
  mat4 = 94,
  centroid = 95,
  in = 96,
  out = 97,
  inout = 98,
  uniform = 99,
  patch = 100,
  sample = 101,
  buffer = 102,
  shared = 103,
  coherent = 104,
  volatile_ = 105,
  restrict_ = 106,
  readonly = 107,
  writeonly = 108,
  dvec2 = 109,
  dvec3 = 110,
  dvec4 = 111,
  dmat2 = 112,
  dmat3 = 113,
  dmat4 = 114,
  noperspective = 115,
  flat = 116,
  smooth = 117,
  layout = 118,
  mat2x2 = 119,
  mat2x3 = 120,
  mat2x4 = 121,
  mat3x2 = 122,
  mat3x3 = 123,
  mat3x4 = 124,
  mat4x2 = 125,
  mat4x3 = 126,
  mat4x4 = 127,
  dmat2x2 = 128,
  dmat2x3 = 129,
  dmat2x4 = 130,
  dmat3x2 = 131,
  dmat3x3 = 132,
  dmat3x4 = 133,
  dmat4x2 = 134,
  dmat4x3 = 135,
  dmat4x4 = 136,
  atomic_uint = 137,
  sampler1d = 138,
  sampler2d = 139,
  sampler3d = 140,
  samplercube = 141,
  sampler1dshadow = 142,
  sampler2dshadow = 143,
  samplercubeshadow = 144,
  sampler1darray = 145,
  sampler2darray = 146,
  sampler1darrayshadow = 147,
  sampler2darrayshadow = 148,
  isampler1d = 149,
  isampler2d = 150,
  isampler3d = 151,
  isamplercube = 152,
  isampler1darray = 153,
  isampler2darray = 154,
  usampler1d = 155,
  usampler2d = 156,
  usampler3d = 157,
  usamplercube = 158,
  usampler1darray = 159,
  usampler2darray = 160,
  sampler2drect = 161,
  sampler2drectshadow = 162,
  isampler2drect = 163,
  usampler2drect = 164,
  samplerbuffer = 165,
  isamplerbuffer = 166,
  usamplerbuffer = 167,
  samplercubearray = 168,
  samplercubearrayshadow = 169,
  isamplercubearray = 170,
  usamplercubearray = 171,
  sampler2dms = 172,
  isampler2dms = 173,
  usampler2dms = 174,
  sampler2dmsarray = 175,
  isampler2dmsarray = 176,
  usampler2dmsarray = 177,
  image1d = 178,
  iimage1d = 179,
  uimage1d = 180,
  image2d = 181,
  iimage2d = 182,
  uimage2d = 183,
  image3d = 184,
  iimage3d = 185,
  uimage3d = 186,
  image2drect = 187,
  iimage2drect = 188,
  uimage2drect = 189,
  imagecube = 190,
  iimagecube = 191,
  uimagecube = 192,
  imagebuffer = 193,
  iimagebuffer = 194,
  uimagebuffer = 195,
  image1darray = 196,
  iimage1darray = 197,
  uimage1darray = 198,
  image2darray = 199,
  iimage2darray = 200,
  uimage2darray = 201,
  imagecubearray = 202,
  iimagecubearray = 203,
  uimagecubearray = 204,
  image2dms = 205,
  iimage2dms = 206,
  uimage2dms = 207,
  image2dmsarray = 208,
  iimage2dmsarray = 209,
  uimage2dmsarray = 210,
  type_specifier_nonarray = 264,
  variable_identifier = 211,
  primary_expression = 212,
  external_declaration = 293,
  postfix_expression = 213,
  translation_unit = 292,
  conditionopt = 289,
  integer_expression = 214,
  function_call = 215,
  function_call_or_method = 216,
  for_init_statement = 288,
  function_call_header_no_parameters = 218,
  switch_statement_list = 285,
  condition = 283,
  function_identifier = 221,
  unary_expression = 222,
  selection_rest_statement = 282,
  expression_statement = 280,
  statement_list = 279,
  unary_operator = 223,
  multiplicative_expression = 224,
  statement_no_new_scope = 277,
  simple_statement = 275,
  additive_expression = 225,
  shift_expression = 226,
  relational_expression = 227,
  statement = 274,
  equality_expression = 228,
  declaration_statement = 273,
  initializer_list = 272,
  and_expression = 229,
  initializer = 271,
  exclusive_or_expression = 230,
  struct_declarator = 270,
  inclusive_or_expression = 231,
  struct_declarator_list = 269,
  logical_and_expression = 232,
  struct_declaration_list = 267,
  logical_xor_expression = 233,
  precision_qualifier = 265,
  logical_or_expression = 234,
  conditional_expression = 235,
  assignment_expression = 236,
  assignment_operator = 237,
  expression = 238,
  constant_expression = 239,
  function_declarator = 243,
  parameter_declaration = 247,
  parameter_type_specifier = 248,
  init_declarator_list = 249,
  single_declaration = 250,
  fully_specified_type = 251,
  invariant_qualifier = 252,
  interpolation_qualifier = 253,
  layout_qualifier_id_list = 255,
  layout_qualifier_id = 256,
  precise_qualifier = 257,
  type_qualifier = 258,
  single_type_qualifier = 259,
  storage_qualifier = 260,
  type_name_list = 261,
  type_specifier = 262,
  for_rest_statement = 290,
  function_definition = 294,
  jump_statement = 291,
  parameter_declarator = 246,
  function_header_with_parameters = 244,
  function_prototype = 242,
  identifier_list = 241,
  declaration = 240,
  array_specifier = 263,
  function_call_generic = 217,
  case_label = 286,
  compound_statement = 276,
  compound_statement_no_new_scope = 278,
  function_call_header_with_parameters = 219,
  function_call_header = 220,
  function_header = 245,
  struct_declaration = 268,
  struct_specifier = 266,
  layout_qualifier = 254,
  selection_statement = 281,
  iteration_statement = 287,
  switch_statement = 284
};

}   // gliss
