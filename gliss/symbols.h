#pragma once

namespace gliss {

enum symbol_t {
  reserved_keyword = 298,
  attribute = 297,
  varying = 296,
  end = 295,
  struct_ = 1,
  void_ = 2,
  while_ = 3,
  identifier = 4,
  type_name = 5,
  floatconstant = 6,
  doubleconstant = 7,
  intconstant = 8,
  uintconstant = 9,
  boolconstant = 10,
  field_selection = 11,
  left_op = 12,
  right_op = 13,
  inc_op = 14,
  dec_op = 15,
  le_op = 16,
  ge_op = 17,
  eq_op = 18,
  ne_op = 19,
  and_op = 20,
  or_op = 21,
  xor_op = 22,
  mul_assign = 23,
  div_assign = 24,
  add_assign = 25,
  mod_assign = 26,
  left_assign = 27,
  right_assign = 28,
  and_assign = 29,
  xor_assign = 30,
  or_assign = 31,
  sub_assign = 32,
  left_paren = 33,
  right_paren = 34,
  left_bracket = 35,
  right_bracket = 36,
  left_brace = 37,
  right_brace = 38,
  dot = 39,
  comma = 40,
  colon = 41,
  equal = 42,
  semicolon = 43,
  bang = 44,
  dash = 45,
  tilde = 46,
  plus = 47,
  star = 48,
  slash = 49,
  percent = 50,
  left_angle = 51,
  right_angle = 52,
  vertical_bar = 53,
  caret = 54,
  ampersand = 55,
  question = 56,
  invariant = 57,
  precise = 58,
  high_precision = 59,
  medium_precision = 60,
  low_precision = 61,
  precision = 62,
  const_ = 63,
  bool_ = 64,
  float_ = 65,
  double_ = 66,
  int_ = 67,
  uint_ = 68,
  break_ = 69,
  continue_ = 70,
  do_ = 71,
  else_ = 72,
  for_ = 73,
  if_ = 74,
  discard = 75,
  return_ = 76,
  switch_ = 77,
  case_ = 78,
  default_ = 79,
  subroutine = 80,
  bvec2 = 81,
  bvec3 = 82,
  bvec4 = 83,
  ivec2 = 84,
  ivec3 = 85,
  ivec4 = 86,
  uvec2 = 87,
  uvec3 = 88,
  uvec4 = 89,
  vec2 = 90,
  vec3 = 91,
  vec4 = 92,
  mat2 = 93,
  mat3 = 94,
  mat4 = 95,
  centroid = 96,
  in = 97,
  out = 98,
  inout = 99,
  uniform = 100,
  patch = 101,
  sample = 102,
  buffer = 103,
  shared = 104,
  coherent = 105,
  volatile_ = 106,
  restrict_ = 107,
  readonly = 108,
  writeonly = 109,
  dvec2 = 110,
  dvec3 = 111,
  dvec4 = 112,
  dmat2 = 113,
  dmat3 = 114,
  dmat4 = 115,
  noperspective = 116,
  flat = 117,
  smooth = 118,
  layout = 119,
  mat2x2 = 120,
  mat2x3 = 121,
  mat2x4 = 122,
  mat3x2 = 123,
  mat3x3 = 124,
  mat3x4 = 125,
  mat4x2 = 126,
  mat4x3 = 127,
  mat4x4 = 128,
  dmat2x2 = 129,
  dmat2x3 = 130,
  dmat2x4 = 131,
  dmat3x2 = 132,
  dmat3x3 = 133,
  dmat3x4 = 134,
  dmat4x2 = 135,
  dmat4x3 = 136,
  dmat4x4 = 137,
  atomic_uint = 138,
  sampler1d = 139,
  sampler2d = 140,
  sampler3d = 141,
  samplercube = 142,
  sampler1dshadow = 143,
  sampler2dshadow = 144,
  samplercubeshadow = 145,
  sampler1darray = 146,
  sampler2darray = 147,
  sampler1darrayshadow = 148,
  sampler2darrayshadow = 149,
  isampler1d = 150,
  isampler2d = 151,
  isampler3d = 152,
  isamplercube = 153,
  isampler1darray = 154,
  isampler2darray = 155,
  usampler1d = 156,
  usampler2d = 157,
  usampler3d = 158,
  usamplercube = 159,
  usampler1darray = 160,
  usampler2darray = 161,
  sampler2drect = 162,
  sampler2drectshadow = 163,
  isampler2drect = 164,
  usampler2drect = 165,
  samplerbuffer = 166,
  isamplerbuffer = 167,
  usamplerbuffer = 168,
  samplercubearray = 169,
  samplercubearrayshadow = 170,
  isamplercubearray = 171,
  usamplercubearray = 172,
  sampler2dms = 173,
  isampler2dms = 174,
  usampler2dms = 175,
  sampler2dmsarray = 176,
  isampler2dmsarray = 177,
  usampler2dmsarray = 178,
  image1d = 179,
  iimage1d = 180,
  uimage1d = 181,
  image2d = 182,
  iimage2d = 183,
  uimage2d = 184,
  image3d = 185,
  iimage3d = 186,
  uimage3d = 187,
  image2drect = 188,
  iimage2drect = 189,
  uimage2drect = 190,
  imagecube = 191,
  iimagecube = 192,
  uimagecube = 193,
  imagebuffer = 194,
  iimagebuffer = 195,
  uimagebuffer = 196,
  image1darray = 197,
  iimage1darray = 198,
  uimage1darray = 199,
  image2darray = 200,
  iimage2darray = 201,
  uimage2darray = 202,
  imagecubearray = 203,
  iimagecubearray = 204,
  uimagecubearray = 205,
  image2dms = 206,
  iimage2dms = 207,
  uimage2dms = 208,
  image2dmsarray = 209,
  iimage2dmsarray = 210,
  uimage2dmsarray = 211,
  type_specifier_nonarray = 265,
  variable_identifier = 212,
  primary_expression = 213,
  external_declaration = 294,
  postfix_expression = 214,
  translation_unit = 293,
  conditionopt = 290,
  integer_expression = 215,
  function_call = 216,
  function_call_or_method = 217,
  for_init_statement = 289,
  function_call_header_no_parameters = 219,
  switch_statement_list = 286,
  condition = 284,
  function_identifier = 222,
  unary_expression = 223,
  selection_rest_statement = 283,
  expression_statement = 281,
  statement_list = 280,
  unary_operator = 224,
  multiplicative_expression = 225,
  statement_no_new_scope = 278,
  simple_statement = 276,
  additive_expression = 226,
  shift_expression = 227,
  relational_expression = 228,
  statement = 275,
  equality_expression = 229,
  declaration_statement = 274,
  initializer_list = 273,
  and_expression = 230,
  initializer = 272,
  exclusive_or_expression = 231,
  struct_declarator = 271,
  inclusive_or_expression = 232,
  struct_declarator_list = 270,
  logical_and_expression = 233,
  struct_declaration_list = 268,
  logical_xor_expression = 234,
  precision_qualifier = 266,
  logical_or_expression = 235,
  conditional_expression = 236,
  assignment_expression = 237,
  assignment_operator = 238,
  expression = 239,
  constant_expression = 240,
  function_declarator = 244,
  parameter_declaration = 248,
  parameter_type_specifier = 249,
  init_declarator_list = 250,
  single_declaration = 251,
  fully_specified_type = 252,
  invariant_qualifier = 253,
  interpolation_qualifier = 254,
  layout_qualifier_id_list = 256,
  layout_qualifier_id = 257,
  precise_qualifier = 258,
  type_qualifier = 259,
  single_type_qualifier = 260,
  storage_qualifier = 261,
  type_name_list = 262,
  type_specifier = 263,
  for_rest_statement = 291,
  function_definition = 295,
  jump_statement = 292,
  parameter_declarator = 247,
  function_header_with_parameters = 245,
  function_prototype = 243,
  identifier_list = 242,
  declaration = 241,
  array_specifier = 264,
  function_call_generic = 218,
  case_label = 287,
  compound_statement = 277,
  compound_statement_no_new_scope = 279,
  function_call_header_with_parameters = 220,
  function_call_header = 221,
  function_header = 246,
  struct_declaration = 269,
  struct_specifier = 267,
  layout_qualifier = 255,
  selection_statement = 282,
  iteration_statement = 288,
  switch_statement = 285
};

}   // gliss
