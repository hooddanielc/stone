#pragma once

/**
 * DO NOT MODIFY - AUTO GENERATED BY "../scripts/gen_cpp_node_constants.js"
 */

#include <vector>
#include "../ast.h"
#include "expression.h"
#include "switch-statement-list.h"

/**
 * Patterns for switch_statement
 *
 * 1. SWITCH LEFT_PAREN expression RIGHT_PAREN LEFT_BRACE switch_statement_list RIGHT_BRACE
 */

namespace gliss {

namespace ast {

class expression_t;
class switch_statement_list_t;

class switch_statement_t: public ast_t {

public:

  static constexpr int rules = 1;

  static constexpr int id = 285;

  virtual ~switch_statement_t() = default;

};  // switch_statement_t

class switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t: public switch_statement_t {

public:

  std::shared_ptr<ast_token_t> switch_0;

  std::shared_ptr<ast_token_t> left_paren_1;

  std::shared_ptr<expression_t> expression_2;

  std::shared_ptr<ast_token_t> right_paren_3;

  std::shared_ptr<ast_token_t> left_brace_4;

  std::shared_ptr<switch_statement_list_t> switch_statement_list_5;

  std::shared_ptr<ast_token_t> right_brace_6;

  switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t(
    std::shared_ptr<ast_token_t> switch_0_,
    std::shared_ptr<ast_token_t> left_paren_1_,
    std::shared_ptr<expression_t> expression_2_,
    std::shared_ptr<ast_token_t> right_paren_3_,
    std::shared_ptr<ast_token_t> left_brace_4_,
    std::shared_ptr<switch_statement_list_t> switch_statement_list_5_,
    std::shared_ptr<ast_token_t> right_brace_6_
  ): switch_0(switch_0_),
     left_paren_1(left_paren_1_),
     expression_2(expression_2_),
     right_paren_3(right_paren_3_),
     left_brace_4(left_brace_4_),
     switch_statement_list_5(switch_statement_list_5_),
     right_brace_6(right_brace_6_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 285;
  }

  static std::shared_ptr<switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t> make(
    std::shared_ptr<ast_token_t> SWITCH_0_,
    std::shared_ptr<ast_token_t> LEFT_PAREN_1_,
    std::shared_ptr<expression_t> expression_2_,
    std::shared_ptr<ast_token_t> RIGHT_PAREN_3_,
    std::shared_ptr<ast_token_t> LEFT_BRACE_4_,
    std::shared_ptr<switch_statement_list_t> switch_statement_list_5_,
    std::shared_ptr<ast_token_t> RIGHT_BRACE_6_
  ) {
    return std::make_shared<switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t>(
      SWITCH_0_,
      LEFT_PAREN_1_,
      expression_2_,
      RIGHT_PAREN_3_,
      LEFT_BRACE_4_,
      switch_statement_list_5_,
      RIGHT_BRACE_6_
    );
  }

};  // switch_statement_switch_left_paren_expression_right_paren_left_brace_switch_statement_list_right_brace_t

}   // ast

}   // gliss
