#pragma once

/**
 * DO NOT MODIFY - AUTO GENERATED BY "../scripts/gen_cpp_node_constants.js"
 */

#include <vector>
#include "../ast.h"
#include "struct-specifier.h"

/**
 * Patterns for type_specifier_nonarray
 *
 * 1. VOID
 * 2. FLOAT
 * 3. DOUBLE
 * 4. INT
 * 5. UINT
 * 6. BOOL
 * 7. VEC2
 * 8. VEC3
 * 9. VEC4
 * 10. DVEC2
 * 11. DVEC3
 * 12. DVEC4
 * 13. BVEC2
 * 14. BVEC3
 * 15. BVEC4
 * 16. IVEC2
 * 17. IVEC3
 * 18. IVEC4
 * 19. UVEC2
 * 20. UVEC3
 * 21. UVEC4
 * 22. MAT2
 * 23. MAT3
 * 24. MAT4
 * 25. MAT2X2
 * 26. MAT2X3
 * 27. MAT2X4
 * 28. MAT3X2
 * 29. MAT3X3
 * 30. MAT3X4
 * 31. MAT4X2
 * 32. MAT4X3
 * 33. MAT4X4
 * 34. DMAT2
 * 35. DMAT3
 * 36. DMAT4
 * 37. DMAT2X2
 * 38. DMAT2X3
 * 39. DMAT2X4
 * 40. DMAT3X2
 * 41. DMAT3X3
 * 42. DMAT3X4
 * 43. DMAT4X2
 * 44. DMAT4X3
 * 45. DMAT4X4
 * 46. ATOMIC_UINT
 * 47. SAMPLER1D
 * 48. SAMPLER2D
 * 49. SAMPLER3D
 * 50. SAMPLERCUBE
 * 51. SAMPLER1DSHADOW
 * 52. SAMPLER2DSHADOW
 * 53. SAMPLERCUBESHADOW
 * 54. SAMPLER1DARRAY
 * 55. SAMPLER2DARRAY
 * 56. SAMPLER1DARRAYSHADOW
 * 57. SAMPLER2DARRAYSHADOW
 * 58. SAMPLERCUBEARRAY
 * 59. SAMPLERCUBEARRAYSHADOW
 * 60. ISAMPLER1D
 * 61. ISAMPLER2D
 * 62. ISAMPLER3D
 * 63. ISAMPLERCUBE
 * 64. ISAMPLER1DARRAY
 * 65. ISAMPLER2DARRAY
 * 66. ISAMPLERCUBEARRAY
 * 67. USAMPLER1D
 * 68. USAMPLER2D
 * 69. USAMPLER3D
 * 70. USAMPLERCUBE
 * 71. USAMPLER1DARRAY
 * 72. USAMPLER2DARRAY
 * 73. USAMPLERCUBEARRAY
 * 74. SAMPLER2DRECT
 * 75. SAMPLER2DRECTSHADOW
 * 76. ISAMPLER2DRECT
 * 77. USAMPLER2DRECT
 * 78. SAMPLERBUFFER
 * 79. ISAMPLERBUFFER
 * 80. USAMPLERBUFFER
 * 81. SAMPLER2DMS
 * 82. ISAMPLER2DMS
 * 83. USAMPLER2DMS
 * 84. SAMPLER2DMSARRAY
 * 85. ISAMPLER2DMSARRAY
 * 86. USAMPLER2DMSARRAY
 * 87. IMAGE1D
 * 88. IIMAGE1D
 * 89. UIMAGE1D
 * 90. IMAGE2D
 * 91. IIMAGE2D
 * 92. UIMAGE2D
 * 93. IMAGE3D
 * 94. IIMAGE3D
 * 95. UIMAGE3D
 * 96. IMAGE2DRECT
 * 97. IIMAGE2DRECT
 * 98. UIMAGE2DRECT
 * 99. IMAGECUBE
 * 100. IIMAGECUBE
 * 101. UIMAGECUBE
 * 102. IMAGEBUFFER
 * 103. IIMAGEBUFFER
 * 104. UIMAGEBUFFER
 * 105. IMAGE1DARRAY
 * 106. IIMAGE1DARRAY
 * 107. UIMAGE1DARRAY
 * 108. IMAGE2DARRAY
 * 109. IIMAGE2DARRAY
 * 110. UIMAGE2DARRAY
 * 111. IMAGECUBEARRAY
 * 112. IIMAGECUBEARRAY
 * 113. UIMAGECUBEARRAY
 * 114. IMAGE2DMS
 * 115. IIMAGE2DMS
 * 116. UIMAGE2DMS
 * 117. IMAGE2DMSARRAY
 * 118. IIMAGE2DMSARRAY
 * 119. UIMAGE2DMSARRAY
 * 120. struct_specifier
 * 121. TYPE_NAME
 */

namespace gliss {

namespace ast {

class struct_specifier_t;

class type_specifier_nonarray_t: public ast_t {

public:

  static constexpr int rules = 121;

  static constexpr int id = 264;

  virtual ~type_specifier_nonarray_t() = default;

};  // type_specifier_nonarray_t

class type_specifier_nonarray_void_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> void_0;

  type_specifier_nonarray_void_t(
    std::unique_ptr<token_t> &&void_0_
  ): void_0(std::move(void_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_void_t> make(
    const token_t *VOID_0_
  ) {
    return std::make_unique<type_specifier_nonarray_void_t>(
      std::make_unique<token_t>(*VOID_0_)
    );
  }

};  // type_specifier_nonarray_void_t

class type_specifier_nonarray_float_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> float_0;

  type_specifier_nonarray_float_t(
    std::unique_ptr<token_t> &&float_0_
  ): float_0(std::move(float_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_float_t> make(
    const token_t *FLOAT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_float_t>(
      std::make_unique<token_t>(*FLOAT_0_)
    );
  }

};  // type_specifier_nonarray_float_t

class type_specifier_nonarray_double_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> double_0;

  type_specifier_nonarray_double_t(
    std::unique_ptr<token_t> &&double_0_
  ): double_0(std::move(double_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_double_t> make(
    const token_t *DOUBLE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_double_t>(
      std::make_unique<token_t>(*DOUBLE_0_)
    );
  }

};  // type_specifier_nonarray_double_t

class type_specifier_nonarray_int_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> int_0;

  type_specifier_nonarray_int_t(
    std::unique_ptr<token_t> &&int_0_
  ): int_0(std::move(int_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_int_t> make(
    const token_t *INT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_int_t>(
      std::make_unique<token_t>(*INT_0_)
    );
  }

};  // type_specifier_nonarray_int_t

class type_specifier_nonarray_uint_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uint_0;

  type_specifier_nonarray_uint_t(
    std::unique_ptr<token_t> &&uint_0_
  ): uint_0(std::move(uint_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uint_t> make(
    const token_t *UINT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uint_t>(
      std::make_unique<token_t>(*UINT_0_)
    );
  }

};  // type_specifier_nonarray_uint_t

class type_specifier_nonarray_bool_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> bool_0;

  type_specifier_nonarray_bool_t(
    std::unique_ptr<token_t> &&bool_0_
  ): bool_0(std::move(bool_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_bool_t> make(
    const token_t *BOOL_0_
  ) {
    return std::make_unique<type_specifier_nonarray_bool_t>(
      std::make_unique<token_t>(*BOOL_0_)
    );
  }

};  // type_specifier_nonarray_bool_t

class type_specifier_nonarray_vec2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> vec2_0;

  type_specifier_nonarray_vec2_t(
    std::unique_ptr<token_t> &&vec2_0_
  ): vec2_0(std::move(vec2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_vec2_t> make(
    const token_t *VEC2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_vec2_t>(
      std::make_unique<token_t>(*VEC2_0_)
    );
  }

};  // type_specifier_nonarray_vec2_t

class type_specifier_nonarray_vec3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> vec3_0;

  type_specifier_nonarray_vec3_t(
    std::unique_ptr<token_t> &&vec3_0_
  ): vec3_0(std::move(vec3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_vec3_t> make(
    const token_t *VEC3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_vec3_t>(
      std::make_unique<token_t>(*VEC3_0_)
    );
  }

};  // type_specifier_nonarray_vec3_t

class type_specifier_nonarray_vec4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> vec4_0;

  type_specifier_nonarray_vec4_t(
    std::unique_ptr<token_t> &&vec4_0_
  ): vec4_0(std::move(vec4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_vec4_t> make(
    const token_t *VEC4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_vec4_t>(
      std::make_unique<token_t>(*VEC4_0_)
    );
  }

};  // type_specifier_nonarray_vec4_t

class type_specifier_nonarray_dvec2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dvec2_0;

  type_specifier_nonarray_dvec2_t(
    std::unique_ptr<token_t> &&dvec2_0_
  ): dvec2_0(std::move(dvec2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dvec2_t> make(
    const token_t *DVEC2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dvec2_t>(
      std::make_unique<token_t>(*DVEC2_0_)
    );
  }

};  // type_specifier_nonarray_dvec2_t

class type_specifier_nonarray_dvec3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dvec3_0;

  type_specifier_nonarray_dvec3_t(
    std::unique_ptr<token_t> &&dvec3_0_
  ): dvec3_0(std::move(dvec3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dvec3_t> make(
    const token_t *DVEC3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dvec3_t>(
      std::make_unique<token_t>(*DVEC3_0_)
    );
  }

};  // type_specifier_nonarray_dvec3_t

class type_specifier_nonarray_dvec4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dvec4_0;

  type_specifier_nonarray_dvec4_t(
    std::unique_ptr<token_t> &&dvec4_0_
  ): dvec4_0(std::move(dvec4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dvec4_t> make(
    const token_t *DVEC4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dvec4_t>(
      std::make_unique<token_t>(*DVEC4_0_)
    );
  }

};  // type_specifier_nonarray_dvec4_t

class type_specifier_nonarray_bvec2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> bvec2_0;

  type_specifier_nonarray_bvec2_t(
    std::unique_ptr<token_t> &&bvec2_0_
  ): bvec2_0(std::move(bvec2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_bvec2_t> make(
    const token_t *BVEC2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_bvec2_t>(
      std::make_unique<token_t>(*BVEC2_0_)
    );
  }

};  // type_specifier_nonarray_bvec2_t

class type_specifier_nonarray_bvec3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> bvec3_0;

  type_specifier_nonarray_bvec3_t(
    std::unique_ptr<token_t> &&bvec3_0_
  ): bvec3_0(std::move(bvec3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_bvec3_t> make(
    const token_t *BVEC3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_bvec3_t>(
      std::make_unique<token_t>(*BVEC3_0_)
    );
  }

};  // type_specifier_nonarray_bvec3_t

class type_specifier_nonarray_bvec4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> bvec4_0;

  type_specifier_nonarray_bvec4_t(
    std::unique_ptr<token_t> &&bvec4_0_
  ): bvec4_0(std::move(bvec4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_bvec4_t> make(
    const token_t *BVEC4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_bvec4_t>(
      std::make_unique<token_t>(*BVEC4_0_)
    );
  }

};  // type_specifier_nonarray_bvec4_t

class type_specifier_nonarray_ivec2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> ivec2_0;

  type_specifier_nonarray_ivec2_t(
    std::unique_ptr<token_t> &&ivec2_0_
  ): ivec2_0(std::move(ivec2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_ivec2_t> make(
    const token_t *IVEC2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_ivec2_t>(
      std::make_unique<token_t>(*IVEC2_0_)
    );
  }

};  // type_specifier_nonarray_ivec2_t

class type_specifier_nonarray_ivec3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> ivec3_0;

  type_specifier_nonarray_ivec3_t(
    std::unique_ptr<token_t> &&ivec3_0_
  ): ivec3_0(std::move(ivec3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_ivec3_t> make(
    const token_t *IVEC3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_ivec3_t>(
      std::make_unique<token_t>(*IVEC3_0_)
    );
  }

};  // type_specifier_nonarray_ivec3_t

class type_specifier_nonarray_ivec4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> ivec4_0;

  type_specifier_nonarray_ivec4_t(
    std::unique_ptr<token_t> &&ivec4_0_
  ): ivec4_0(std::move(ivec4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_ivec4_t> make(
    const token_t *IVEC4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_ivec4_t>(
      std::make_unique<token_t>(*IVEC4_0_)
    );
  }

};  // type_specifier_nonarray_ivec4_t

class type_specifier_nonarray_uvec2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uvec2_0;

  type_specifier_nonarray_uvec2_t(
    std::unique_ptr<token_t> &&uvec2_0_
  ): uvec2_0(std::move(uvec2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uvec2_t> make(
    const token_t *UVEC2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uvec2_t>(
      std::make_unique<token_t>(*UVEC2_0_)
    );
  }

};  // type_specifier_nonarray_uvec2_t

class type_specifier_nonarray_uvec3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uvec3_0;

  type_specifier_nonarray_uvec3_t(
    std::unique_ptr<token_t> &&uvec3_0_
  ): uvec3_0(std::move(uvec3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uvec3_t> make(
    const token_t *UVEC3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uvec3_t>(
      std::make_unique<token_t>(*UVEC3_0_)
    );
  }

};  // type_specifier_nonarray_uvec3_t

class type_specifier_nonarray_uvec4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uvec4_0;

  type_specifier_nonarray_uvec4_t(
    std::unique_ptr<token_t> &&uvec4_0_
  ): uvec4_0(std::move(uvec4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uvec4_t> make(
    const token_t *UVEC4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uvec4_t>(
      std::make_unique<token_t>(*UVEC4_0_)
    );
  }

};  // type_specifier_nonarray_uvec4_t

class type_specifier_nonarray_mat2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat2_0;

  type_specifier_nonarray_mat2_t(
    std::unique_ptr<token_t> &&mat2_0_
  ): mat2_0(std::move(mat2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat2_t> make(
    const token_t *MAT2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat2_t>(
      std::make_unique<token_t>(*MAT2_0_)
    );
  }

};  // type_specifier_nonarray_mat2_t

class type_specifier_nonarray_mat3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat3_0;

  type_specifier_nonarray_mat3_t(
    std::unique_ptr<token_t> &&mat3_0_
  ): mat3_0(std::move(mat3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat3_t> make(
    const token_t *MAT3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat3_t>(
      std::make_unique<token_t>(*MAT3_0_)
    );
  }

};  // type_specifier_nonarray_mat3_t

class type_specifier_nonarray_mat4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat4_0;

  type_specifier_nonarray_mat4_t(
    std::unique_ptr<token_t> &&mat4_0_
  ): mat4_0(std::move(mat4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat4_t> make(
    const token_t *MAT4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat4_t>(
      std::make_unique<token_t>(*MAT4_0_)
    );
  }

};  // type_specifier_nonarray_mat4_t

class type_specifier_nonarray_mat2x2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat2x2_0;

  type_specifier_nonarray_mat2x2_t(
    std::unique_ptr<token_t> &&mat2x2_0_
  ): mat2x2_0(std::move(mat2x2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat2x2_t> make(
    const token_t *MAT2X2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat2x2_t>(
      std::make_unique<token_t>(*MAT2X2_0_)
    );
  }

};  // type_specifier_nonarray_mat2x2_t

class type_specifier_nonarray_mat2x3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat2x3_0;

  type_specifier_nonarray_mat2x3_t(
    std::unique_ptr<token_t> &&mat2x3_0_
  ): mat2x3_0(std::move(mat2x3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat2x3_t> make(
    const token_t *MAT2X3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat2x3_t>(
      std::make_unique<token_t>(*MAT2X3_0_)
    );
  }

};  // type_specifier_nonarray_mat2x3_t

class type_specifier_nonarray_mat2x4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat2x4_0;

  type_specifier_nonarray_mat2x4_t(
    std::unique_ptr<token_t> &&mat2x4_0_
  ): mat2x4_0(std::move(mat2x4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat2x4_t> make(
    const token_t *MAT2X4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat2x4_t>(
      std::make_unique<token_t>(*MAT2X4_0_)
    );
  }

};  // type_specifier_nonarray_mat2x4_t

class type_specifier_nonarray_mat3x2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat3x2_0;

  type_specifier_nonarray_mat3x2_t(
    std::unique_ptr<token_t> &&mat3x2_0_
  ): mat3x2_0(std::move(mat3x2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat3x2_t> make(
    const token_t *MAT3X2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat3x2_t>(
      std::make_unique<token_t>(*MAT3X2_0_)
    );
  }

};  // type_specifier_nonarray_mat3x2_t

class type_specifier_nonarray_mat3x3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat3x3_0;

  type_specifier_nonarray_mat3x3_t(
    std::unique_ptr<token_t> &&mat3x3_0_
  ): mat3x3_0(std::move(mat3x3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat3x3_t> make(
    const token_t *MAT3X3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat3x3_t>(
      std::make_unique<token_t>(*MAT3X3_0_)
    );
  }

};  // type_specifier_nonarray_mat3x3_t

class type_specifier_nonarray_mat3x4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat3x4_0;

  type_specifier_nonarray_mat3x4_t(
    std::unique_ptr<token_t> &&mat3x4_0_
  ): mat3x4_0(std::move(mat3x4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat3x4_t> make(
    const token_t *MAT3X4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat3x4_t>(
      std::make_unique<token_t>(*MAT3X4_0_)
    );
  }

};  // type_specifier_nonarray_mat3x4_t

class type_specifier_nonarray_mat4x2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat4x2_0;

  type_specifier_nonarray_mat4x2_t(
    std::unique_ptr<token_t> &&mat4x2_0_
  ): mat4x2_0(std::move(mat4x2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat4x2_t> make(
    const token_t *MAT4X2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat4x2_t>(
      std::make_unique<token_t>(*MAT4X2_0_)
    );
  }

};  // type_specifier_nonarray_mat4x2_t

class type_specifier_nonarray_mat4x3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat4x3_0;

  type_specifier_nonarray_mat4x3_t(
    std::unique_ptr<token_t> &&mat4x3_0_
  ): mat4x3_0(std::move(mat4x3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat4x3_t> make(
    const token_t *MAT4X3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat4x3_t>(
      std::make_unique<token_t>(*MAT4X3_0_)
    );
  }

};  // type_specifier_nonarray_mat4x3_t

class type_specifier_nonarray_mat4x4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> mat4x4_0;

  type_specifier_nonarray_mat4x4_t(
    std::unique_ptr<token_t> &&mat4x4_0_
  ): mat4x4_0(std::move(mat4x4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_mat4x4_t> make(
    const token_t *MAT4X4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_mat4x4_t>(
      std::make_unique<token_t>(*MAT4X4_0_)
    );
  }

};  // type_specifier_nonarray_mat4x4_t

class type_specifier_nonarray_dmat2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat2_0;

  type_specifier_nonarray_dmat2_t(
    std::unique_ptr<token_t> &&dmat2_0_
  ): dmat2_0(std::move(dmat2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat2_t> make(
    const token_t *DMAT2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat2_t>(
      std::make_unique<token_t>(*DMAT2_0_)
    );
  }

};  // type_specifier_nonarray_dmat2_t

class type_specifier_nonarray_dmat3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat3_0;

  type_specifier_nonarray_dmat3_t(
    std::unique_ptr<token_t> &&dmat3_0_
  ): dmat3_0(std::move(dmat3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat3_t> make(
    const token_t *DMAT3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat3_t>(
      std::make_unique<token_t>(*DMAT3_0_)
    );
  }

};  // type_specifier_nonarray_dmat3_t

class type_specifier_nonarray_dmat4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat4_0;

  type_specifier_nonarray_dmat4_t(
    std::unique_ptr<token_t> &&dmat4_0_
  ): dmat4_0(std::move(dmat4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat4_t> make(
    const token_t *DMAT4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat4_t>(
      std::make_unique<token_t>(*DMAT4_0_)
    );
  }

};  // type_specifier_nonarray_dmat4_t

class type_specifier_nonarray_dmat2x2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat2x2_0;

  type_specifier_nonarray_dmat2x2_t(
    std::unique_ptr<token_t> &&dmat2x2_0_
  ): dmat2x2_0(std::move(dmat2x2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat2x2_t> make(
    const token_t *DMAT2X2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat2x2_t>(
      std::make_unique<token_t>(*DMAT2X2_0_)
    );
  }

};  // type_specifier_nonarray_dmat2x2_t

class type_specifier_nonarray_dmat2x3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat2x3_0;

  type_specifier_nonarray_dmat2x3_t(
    std::unique_ptr<token_t> &&dmat2x3_0_
  ): dmat2x3_0(std::move(dmat2x3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat2x3_t> make(
    const token_t *DMAT2X3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat2x3_t>(
      std::make_unique<token_t>(*DMAT2X3_0_)
    );
  }

};  // type_specifier_nonarray_dmat2x3_t

class type_specifier_nonarray_dmat2x4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat2x4_0;

  type_specifier_nonarray_dmat2x4_t(
    std::unique_ptr<token_t> &&dmat2x4_0_
  ): dmat2x4_0(std::move(dmat2x4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat2x4_t> make(
    const token_t *DMAT2X4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat2x4_t>(
      std::make_unique<token_t>(*DMAT2X4_0_)
    );
  }

};  // type_specifier_nonarray_dmat2x4_t

class type_specifier_nonarray_dmat3x2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat3x2_0;

  type_specifier_nonarray_dmat3x2_t(
    std::unique_ptr<token_t> &&dmat3x2_0_
  ): dmat3x2_0(std::move(dmat3x2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat3x2_t> make(
    const token_t *DMAT3X2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat3x2_t>(
      std::make_unique<token_t>(*DMAT3X2_0_)
    );
  }

};  // type_specifier_nonarray_dmat3x2_t

class type_specifier_nonarray_dmat3x3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat3x3_0;

  type_specifier_nonarray_dmat3x3_t(
    std::unique_ptr<token_t> &&dmat3x3_0_
  ): dmat3x3_0(std::move(dmat3x3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat3x3_t> make(
    const token_t *DMAT3X3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat3x3_t>(
      std::make_unique<token_t>(*DMAT3X3_0_)
    );
  }

};  // type_specifier_nonarray_dmat3x3_t

class type_specifier_nonarray_dmat3x4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat3x4_0;

  type_specifier_nonarray_dmat3x4_t(
    std::unique_ptr<token_t> &&dmat3x4_0_
  ): dmat3x4_0(std::move(dmat3x4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat3x4_t> make(
    const token_t *DMAT3X4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat3x4_t>(
      std::make_unique<token_t>(*DMAT3X4_0_)
    );
  }

};  // type_specifier_nonarray_dmat3x4_t

class type_specifier_nonarray_dmat4x2_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat4x2_0;

  type_specifier_nonarray_dmat4x2_t(
    std::unique_ptr<token_t> &&dmat4x2_0_
  ): dmat4x2_0(std::move(dmat4x2_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat4x2_t> make(
    const token_t *DMAT4X2_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat4x2_t>(
      std::make_unique<token_t>(*DMAT4X2_0_)
    );
  }

};  // type_specifier_nonarray_dmat4x2_t

class type_specifier_nonarray_dmat4x3_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat4x3_0;

  type_specifier_nonarray_dmat4x3_t(
    std::unique_ptr<token_t> &&dmat4x3_0_
  ): dmat4x3_0(std::move(dmat4x3_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat4x3_t> make(
    const token_t *DMAT4X3_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat4x3_t>(
      std::make_unique<token_t>(*DMAT4X3_0_)
    );
  }

};  // type_specifier_nonarray_dmat4x3_t

class type_specifier_nonarray_dmat4x4_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> dmat4x4_0;

  type_specifier_nonarray_dmat4x4_t(
    std::unique_ptr<token_t> &&dmat4x4_0_
  ): dmat4x4_0(std::move(dmat4x4_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_dmat4x4_t> make(
    const token_t *DMAT4X4_0_
  ) {
    return std::make_unique<type_specifier_nonarray_dmat4x4_t>(
      std::make_unique<token_t>(*DMAT4X4_0_)
    );
  }

};  // type_specifier_nonarray_dmat4x4_t

class type_specifier_nonarray_atomic_uint_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> atomic_uint_0;

  type_specifier_nonarray_atomic_uint_t(
    std::unique_ptr<token_t> &&atomic_uint_0_
  ): atomic_uint_0(std::move(atomic_uint_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_atomic_uint_t> make(
    const token_t *ATOMIC_UINT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_atomic_uint_t>(
      std::make_unique<token_t>(*ATOMIC_UINT_0_)
    );
  }

};  // type_specifier_nonarray_atomic_uint_t

class type_specifier_nonarray_sampler1d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler1d_0;

  type_specifier_nonarray_sampler1d_t(
    std::unique_ptr<token_t> &&sampler1d_0_
  ): sampler1d_0(std::move(sampler1d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler1d_t> make(
    const token_t *SAMPLER1D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler1d_t>(
      std::make_unique<token_t>(*SAMPLER1D_0_)
    );
  }

};  // type_specifier_nonarray_sampler1d_t

class type_specifier_nonarray_sampler2d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2d_0;

  type_specifier_nonarray_sampler2d_t(
    std::unique_ptr<token_t> &&sampler2d_0_
  ): sampler2d_0(std::move(sampler2d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2d_t> make(
    const token_t *SAMPLER2D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2d_t>(
      std::make_unique<token_t>(*SAMPLER2D_0_)
    );
  }

};  // type_specifier_nonarray_sampler2d_t

class type_specifier_nonarray_sampler3d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler3d_0;

  type_specifier_nonarray_sampler3d_t(
    std::unique_ptr<token_t> &&sampler3d_0_
  ): sampler3d_0(std::move(sampler3d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler3d_t> make(
    const token_t *SAMPLER3D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler3d_t>(
      std::make_unique<token_t>(*SAMPLER3D_0_)
    );
  }

};  // type_specifier_nonarray_sampler3d_t

class type_specifier_nonarray_samplercube_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> samplercube_0;

  type_specifier_nonarray_samplercube_t(
    std::unique_ptr<token_t> &&samplercube_0_
  ): samplercube_0(std::move(samplercube_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_samplercube_t> make(
    const token_t *SAMPLERCUBE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_samplercube_t>(
      std::make_unique<token_t>(*SAMPLERCUBE_0_)
    );
  }

};  // type_specifier_nonarray_samplercube_t

class type_specifier_nonarray_sampler1dshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler1dshadow_0;

  type_specifier_nonarray_sampler1dshadow_t(
    std::unique_ptr<token_t> &&sampler1dshadow_0_
  ): sampler1dshadow_0(std::move(sampler1dshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler1dshadow_t> make(
    const token_t *SAMPLER1DSHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler1dshadow_t>(
      std::make_unique<token_t>(*SAMPLER1DSHADOW_0_)
    );
  }

};  // type_specifier_nonarray_sampler1dshadow_t

class type_specifier_nonarray_sampler2dshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2dshadow_0;

  type_specifier_nonarray_sampler2dshadow_t(
    std::unique_ptr<token_t> &&sampler2dshadow_0_
  ): sampler2dshadow_0(std::move(sampler2dshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2dshadow_t> make(
    const token_t *SAMPLER2DSHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2dshadow_t>(
      std::make_unique<token_t>(*SAMPLER2DSHADOW_0_)
    );
  }

};  // type_specifier_nonarray_sampler2dshadow_t

class type_specifier_nonarray_samplercubeshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> samplercubeshadow_0;

  type_specifier_nonarray_samplercubeshadow_t(
    std::unique_ptr<token_t> &&samplercubeshadow_0_
  ): samplercubeshadow_0(std::move(samplercubeshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_samplercubeshadow_t> make(
    const token_t *SAMPLERCUBESHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_samplercubeshadow_t>(
      std::make_unique<token_t>(*SAMPLERCUBESHADOW_0_)
    );
  }

};  // type_specifier_nonarray_samplercubeshadow_t

class type_specifier_nonarray_sampler1darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler1darray_0;

  type_specifier_nonarray_sampler1darray_t(
    std::unique_ptr<token_t> &&sampler1darray_0_
  ): sampler1darray_0(std::move(sampler1darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler1darray_t> make(
    const token_t *SAMPLER1DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler1darray_t>(
      std::make_unique<token_t>(*SAMPLER1DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_sampler1darray_t

class type_specifier_nonarray_sampler2darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2darray_0;

  type_specifier_nonarray_sampler2darray_t(
    std::unique_ptr<token_t> &&sampler2darray_0_
  ): sampler2darray_0(std::move(sampler2darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2darray_t> make(
    const token_t *SAMPLER2DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2darray_t>(
      std::make_unique<token_t>(*SAMPLER2DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_sampler2darray_t

class type_specifier_nonarray_sampler1darrayshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler1darrayshadow_0;

  type_specifier_nonarray_sampler1darrayshadow_t(
    std::unique_ptr<token_t> &&sampler1darrayshadow_0_
  ): sampler1darrayshadow_0(std::move(sampler1darrayshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler1darrayshadow_t> make(
    const token_t *SAMPLER1DARRAYSHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler1darrayshadow_t>(
      std::make_unique<token_t>(*SAMPLER1DARRAYSHADOW_0_)
    );
  }

};  // type_specifier_nonarray_sampler1darrayshadow_t

class type_specifier_nonarray_sampler2darrayshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2darrayshadow_0;

  type_specifier_nonarray_sampler2darrayshadow_t(
    std::unique_ptr<token_t> &&sampler2darrayshadow_0_
  ): sampler2darrayshadow_0(std::move(sampler2darrayshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2darrayshadow_t> make(
    const token_t *SAMPLER2DARRAYSHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2darrayshadow_t>(
      std::make_unique<token_t>(*SAMPLER2DARRAYSHADOW_0_)
    );
  }

};  // type_specifier_nonarray_sampler2darrayshadow_t

class type_specifier_nonarray_samplercubearray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> samplercubearray_0;

  type_specifier_nonarray_samplercubearray_t(
    std::unique_ptr<token_t> &&samplercubearray_0_
  ): samplercubearray_0(std::move(samplercubearray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_samplercubearray_t> make(
    const token_t *SAMPLERCUBEARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_samplercubearray_t>(
      std::make_unique<token_t>(*SAMPLERCUBEARRAY_0_)
    );
  }

};  // type_specifier_nonarray_samplercubearray_t

class type_specifier_nonarray_samplercubearrayshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> samplercubearrayshadow_0;

  type_specifier_nonarray_samplercubearrayshadow_t(
    std::unique_ptr<token_t> &&samplercubearrayshadow_0_
  ): samplercubearrayshadow_0(std::move(samplercubearrayshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_samplercubearrayshadow_t> make(
    const token_t *SAMPLERCUBEARRAYSHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_samplercubearrayshadow_t>(
      std::make_unique<token_t>(*SAMPLERCUBEARRAYSHADOW_0_)
    );
  }

};  // type_specifier_nonarray_samplercubearrayshadow_t

class type_specifier_nonarray_isampler1d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler1d_0;

  type_specifier_nonarray_isampler1d_t(
    std::unique_ptr<token_t> &&isampler1d_0_
  ): isampler1d_0(std::move(isampler1d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler1d_t> make(
    const token_t *ISAMPLER1D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler1d_t>(
      std::make_unique<token_t>(*ISAMPLER1D_0_)
    );
  }

};  // type_specifier_nonarray_isampler1d_t

class type_specifier_nonarray_isampler2d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler2d_0;

  type_specifier_nonarray_isampler2d_t(
    std::unique_ptr<token_t> &&isampler2d_0_
  ): isampler2d_0(std::move(isampler2d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler2d_t> make(
    const token_t *ISAMPLER2D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler2d_t>(
      std::make_unique<token_t>(*ISAMPLER2D_0_)
    );
  }

};  // type_specifier_nonarray_isampler2d_t

class type_specifier_nonarray_isampler3d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler3d_0;

  type_specifier_nonarray_isampler3d_t(
    std::unique_ptr<token_t> &&isampler3d_0_
  ): isampler3d_0(std::move(isampler3d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler3d_t> make(
    const token_t *ISAMPLER3D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler3d_t>(
      std::make_unique<token_t>(*ISAMPLER3D_0_)
    );
  }

};  // type_specifier_nonarray_isampler3d_t

class type_specifier_nonarray_isamplercube_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isamplercube_0;

  type_specifier_nonarray_isamplercube_t(
    std::unique_ptr<token_t> &&isamplercube_0_
  ): isamplercube_0(std::move(isamplercube_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isamplercube_t> make(
    const token_t *ISAMPLERCUBE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isamplercube_t>(
      std::make_unique<token_t>(*ISAMPLERCUBE_0_)
    );
  }

};  // type_specifier_nonarray_isamplercube_t

class type_specifier_nonarray_isampler1darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler1darray_0;

  type_specifier_nonarray_isampler1darray_t(
    std::unique_ptr<token_t> &&isampler1darray_0_
  ): isampler1darray_0(std::move(isampler1darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler1darray_t> make(
    const token_t *ISAMPLER1DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler1darray_t>(
      std::make_unique<token_t>(*ISAMPLER1DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_isampler1darray_t

class type_specifier_nonarray_isampler2darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler2darray_0;

  type_specifier_nonarray_isampler2darray_t(
    std::unique_ptr<token_t> &&isampler2darray_0_
  ): isampler2darray_0(std::move(isampler2darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler2darray_t> make(
    const token_t *ISAMPLER2DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler2darray_t>(
      std::make_unique<token_t>(*ISAMPLER2DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_isampler2darray_t

class type_specifier_nonarray_isamplercubearray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isamplercubearray_0;

  type_specifier_nonarray_isamplercubearray_t(
    std::unique_ptr<token_t> &&isamplercubearray_0_
  ): isamplercubearray_0(std::move(isamplercubearray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isamplercubearray_t> make(
    const token_t *ISAMPLERCUBEARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isamplercubearray_t>(
      std::make_unique<token_t>(*ISAMPLERCUBEARRAY_0_)
    );
  }

};  // type_specifier_nonarray_isamplercubearray_t

class type_specifier_nonarray_usampler1d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler1d_0;

  type_specifier_nonarray_usampler1d_t(
    std::unique_ptr<token_t> &&usampler1d_0_
  ): usampler1d_0(std::move(usampler1d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler1d_t> make(
    const token_t *USAMPLER1D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler1d_t>(
      std::make_unique<token_t>(*USAMPLER1D_0_)
    );
  }

};  // type_specifier_nonarray_usampler1d_t

class type_specifier_nonarray_usampler2d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler2d_0;

  type_specifier_nonarray_usampler2d_t(
    std::unique_ptr<token_t> &&usampler2d_0_
  ): usampler2d_0(std::move(usampler2d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler2d_t> make(
    const token_t *USAMPLER2D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler2d_t>(
      std::make_unique<token_t>(*USAMPLER2D_0_)
    );
  }

};  // type_specifier_nonarray_usampler2d_t

class type_specifier_nonarray_usampler3d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler3d_0;

  type_specifier_nonarray_usampler3d_t(
    std::unique_ptr<token_t> &&usampler3d_0_
  ): usampler3d_0(std::move(usampler3d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler3d_t> make(
    const token_t *USAMPLER3D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler3d_t>(
      std::make_unique<token_t>(*USAMPLER3D_0_)
    );
  }

};  // type_specifier_nonarray_usampler3d_t

class type_specifier_nonarray_usamplercube_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usamplercube_0;

  type_specifier_nonarray_usamplercube_t(
    std::unique_ptr<token_t> &&usamplercube_0_
  ): usamplercube_0(std::move(usamplercube_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usamplercube_t> make(
    const token_t *USAMPLERCUBE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usamplercube_t>(
      std::make_unique<token_t>(*USAMPLERCUBE_0_)
    );
  }

};  // type_specifier_nonarray_usamplercube_t

class type_specifier_nonarray_usampler1darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler1darray_0;

  type_specifier_nonarray_usampler1darray_t(
    std::unique_ptr<token_t> &&usampler1darray_0_
  ): usampler1darray_0(std::move(usampler1darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler1darray_t> make(
    const token_t *USAMPLER1DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler1darray_t>(
      std::make_unique<token_t>(*USAMPLER1DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_usampler1darray_t

class type_specifier_nonarray_usampler2darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler2darray_0;

  type_specifier_nonarray_usampler2darray_t(
    std::unique_ptr<token_t> &&usampler2darray_0_
  ): usampler2darray_0(std::move(usampler2darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler2darray_t> make(
    const token_t *USAMPLER2DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler2darray_t>(
      std::make_unique<token_t>(*USAMPLER2DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_usampler2darray_t

class type_specifier_nonarray_usamplercubearray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usamplercubearray_0;

  type_specifier_nonarray_usamplercubearray_t(
    std::unique_ptr<token_t> &&usamplercubearray_0_
  ): usamplercubearray_0(std::move(usamplercubearray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usamplercubearray_t> make(
    const token_t *USAMPLERCUBEARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usamplercubearray_t>(
      std::make_unique<token_t>(*USAMPLERCUBEARRAY_0_)
    );
  }

};  // type_specifier_nonarray_usamplercubearray_t

class type_specifier_nonarray_sampler2drect_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2drect_0;

  type_specifier_nonarray_sampler2drect_t(
    std::unique_ptr<token_t> &&sampler2drect_0_
  ): sampler2drect_0(std::move(sampler2drect_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2drect_t> make(
    const token_t *SAMPLER2DRECT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2drect_t>(
      std::make_unique<token_t>(*SAMPLER2DRECT_0_)
    );
  }

};  // type_specifier_nonarray_sampler2drect_t

class type_specifier_nonarray_sampler2drectshadow_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2drectshadow_0;

  type_specifier_nonarray_sampler2drectshadow_t(
    std::unique_ptr<token_t> &&sampler2drectshadow_0_
  ): sampler2drectshadow_0(std::move(sampler2drectshadow_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2drectshadow_t> make(
    const token_t *SAMPLER2DRECTSHADOW_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2drectshadow_t>(
      std::make_unique<token_t>(*SAMPLER2DRECTSHADOW_0_)
    );
  }

};  // type_specifier_nonarray_sampler2drectshadow_t

class type_specifier_nonarray_isampler2drect_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler2drect_0;

  type_specifier_nonarray_isampler2drect_t(
    std::unique_ptr<token_t> &&isampler2drect_0_
  ): isampler2drect_0(std::move(isampler2drect_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler2drect_t> make(
    const token_t *ISAMPLER2DRECT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler2drect_t>(
      std::make_unique<token_t>(*ISAMPLER2DRECT_0_)
    );
  }

};  // type_specifier_nonarray_isampler2drect_t

class type_specifier_nonarray_usampler2drect_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler2drect_0;

  type_specifier_nonarray_usampler2drect_t(
    std::unique_ptr<token_t> &&usampler2drect_0_
  ): usampler2drect_0(std::move(usampler2drect_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler2drect_t> make(
    const token_t *USAMPLER2DRECT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler2drect_t>(
      std::make_unique<token_t>(*USAMPLER2DRECT_0_)
    );
  }

};  // type_specifier_nonarray_usampler2drect_t

class type_specifier_nonarray_samplerbuffer_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> samplerbuffer_0;

  type_specifier_nonarray_samplerbuffer_t(
    std::unique_ptr<token_t> &&samplerbuffer_0_
  ): samplerbuffer_0(std::move(samplerbuffer_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_samplerbuffer_t> make(
    const token_t *SAMPLERBUFFER_0_
  ) {
    return std::make_unique<type_specifier_nonarray_samplerbuffer_t>(
      std::make_unique<token_t>(*SAMPLERBUFFER_0_)
    );
  }

};  // type_specifier_nonarray_samplerbuffer_t

class type_specifier_nonarray_isamplerbuffer_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isamplerbuffer_0;

  type_specifier_nonarray_isamplerbuffer_t(
    std::unique_ptr<token_t> &&isamplerbuffer_0_
  ): isamplerbuffer_0(std::move(isamplerbuffer_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isamplerbuffer_t> make(
    const token_t *ISAMPLERBUFFER_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isamplerbuffer_t>(
      std::make_unique<token_t>(*ISAMPLERBUFFER_0_)
    );
  }

};  // type_specifier_nonarray_isamplerbuffer_t

class type_specifier_nonarray_usamplerbuffer_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usamplerbuffer_0;

  type_specifier_nonarray_usamplerbuffer_t(
    std::unique_ptr<token_t> &&usamplerbuffer_0_
  ): usamplerbuffer_0(std::move(usamplerbuffer_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usamplerbuffer_t> make(
    const token_t *USAMPLERBUFFER_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usamplerbuffer_t>(
      std::make_unique<token_t>(*USAMPLERBUFFER_0_)
    );
  }

};  // type_specifier_nonarray_usamplerbuffer_t

class type_specifier_nonarray_sampler2dms_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2dms_0;

  type_specifier_nonarray_sampler2dms_t(
    std::unique_ptr<token_t> &&sampler2dms_0_
  ): sampler2dms_0(std::move(sampler2dms_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2dms_t> make(
    const token_t *SAMPLER2DMS_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2dms_t>(
      std::make_unique<token_t>(*SAMPLER2DMS_0_)
    );
  }

};  // type_specifier_nonarray_sampler2dms_t

class type_specifier_nonarray_isampler2dms_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler2dms_0;

  type_specifier_nonarray_isampler2dms_t(
    std::unique_ptr<token_t> &&isampler2dms_0_
  ): isampler2dms_0(std::move(isampler2dms_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler2dms_t> make(
    const token_t *ISAMPLER2DMS_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler2dms_t>(
      std::make_unique<token_t>(*ISAMPLER2DMS_0_)
    );
  }

};  // type_specifier_nonarray_isampler2dms_t

class type_specifier_nonarray_usampler2dms_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler2dms_0;

  type_specifier_nonarray_usampler2dms_t(
    std::unique_ptr<token_t> &&usampler2dms_0_
  ): usampler2dms_0(std::move(usampler2dms_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler2dms_t> make(
    const token_t *USAMPLER2DMS_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler2dms_t>(
      std::make_unique<token_t>(*USAMPLER2DMS_0_)
    );
  }

};  // type_specifier_nonarray_usampler2dms_t

class type_specifier_nonarray_sampler2dmsarray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> sampler2dmsarray_0;

  type_specifier_nonarray_sampler2dmsarray_t(
    std::unique_ptr<token_t> &&sampler2dmsarray_0_
  ): sampler2dmsarray_0(std::move(sampler2dmsarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_sampler2dmsarray_t> make(
    const token_t *SAMPLER2DMSARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_sampler2dmsarray_t>(
      std::make_unique<token_t>(*SAMPLER2DMSARRAY_0_)
    );
  }

};  // type_specifier_nonarray_sampler2dmsarray_t

class type_specifier_nonarray_isampler2dmsarray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> isampler2dmsarray_0;

  type_specifier_nonarray_isampler2dmsarray_t(
    std::unique_ptr<token_t> &&isampler2dmsarray_0_
  ): isampler2dmsarray_0(std::move(isampler2dmsarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_isampler2dmsarray_t> make(
    const token_t *ISAMPLER2DMSARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_isampler2dmsarray_t>(
      std::make_unique<token_t>(*ISAMPLER2DMSARRAY_0_)
    );
  }

};  // type_specifier_nonarray_isampler2dmsarray_t

class type_specifier_nonarray_usampler2dmsarray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> usampler2dmsarray_0;

  type_specifier_nonarray_usampler2dmsarray_t(
    std::unique_ptr<token_t> &&usampler2dmsarray_0_
  ): usampler2dmsarray_0(std::move(usampler2dmsarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_usampler2dmsarray_t> make(
    const token_t *USAMPLER2DMSARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_usampler2dmsarray_t>(
      std::make_unique<token_t>(*USAMPLER2DMSARRAY_0_)
    );
  }

};  // type_specifier_nonarray_usampler2dmsarray_t

class type_specifier_nonarray_image1d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image1d_0;

  type_specifier_nonarray_image1d_t(
    std::unique_ptr<token_t> &&image1d_0_
  ): image1d_0(std::move(image1d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image1d_t> make(
    const token_t *IMAGE1D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image1d_t>(
      std::make_unique<token_t>(*IMAGE1D_0_)
    );
  }

};  // type_specifier_nonarray_image1d_t

class type_specifier_nonarray_iimage1d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage1d_0;

  type_specifier_nonarray_iimage1d_t(
    std::unique_ptr<token_t> &&iimage1d_0_
  ): iimage1d_0(std::move(iimage1d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage1d_t> make(
    const token_t *IIMAGE1D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage1d_t>(
      std::make_unique<token_t>(*IIMAGE1D_0_)
    );
  }

};  // type_specifier_nonarray_iimage1d_t

class type_specifier_nonarray_uimage1d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage1d_0;

  type_specifier_nonarray_uimage1d_t(
    std::unique_ptr<token_t> &&uimage1d_0_
  ): uimage1d_0(std::move(uimage1d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage1d_t> make(
    const token_t *UIMAGE1D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage1d_t>(
      std::make_unique<token_t>(*UIMAGE1D_0_)
    );
  }

};  // type_specifier_nonarray_uimage1d_t

class type_specifier_nonarray_image2d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image2d_0;

  type_specifier_nonarray_image2d_t(
    std::unique_ptr<token_t> &&image2d_0_
  ): image2d_0(std::move(image2d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image2d_t> make(
    const token_t *IMAGE2D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image2d_t>(
      std::make_unique<token_t>(*IMAGE2D_0_)
    );
  }

};  // type_specifier_nonarray_image2d_t

class type_specifier_nonarray_iimage2d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage2d_0;

  type_specifier_nonarray_iimage2d_t(
    std::unique_ptr<token_t> &&iimage2d_0_
  ): iimage2d_0(std::move(iimage2d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage2d_t> make(
    const token_t *IIMAGE2D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage2d_t>(
      std::make_unique<token_t>(*IIMAGE2D_0_)
    );
  }

};  // type_specifier_nonarray_iimage2d_t

class type_specifier_nonarray_uimage2d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage2d_0;

  type_specifier_nonarray_uimage2d_t(
    std::unique_ptr<token_t> &&uimage2d_0_
  ): uimage2d_0(std::move(uimage2d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage2d_t> make(
    const token_t *UIMAGE2D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage2d_t>(
      std::make_unique<token_t>(*UIMAGE2D_0_)
    );
  }

};  // type_specifier_nonarray_uimage2d_t

class type_specifier_nonarray_image3d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image3d_0;

  type_specifier_nonarray_image3d_t(
    std::unique_ptr<token_t> &&image3d_0_
  ): image3d_0(std::move(image3d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image3d_t> make(
    const token_t *IMAGE3D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image3d_t>(
      std::make_unique<token_t>(*IMAGE3D_0_)
    );
  }

};  // type_specifier_nonarray_image3d_t

class type_specifier_nonarray_iimage3d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage3d_0;

  type_specifier_nonarray_iimage3d_t(
    std::unique_ptr<token_t> &&iimage3d_0_
  ): iimage3d_0(std::move(iimage3d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage3d_t> make(
    const token_t *IIMAGE3D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage3d_t>(
      std::make_unique<token_t>(*IIMAGE3D_0_)
    );
  }

};  // type_specifier_nonarray_iimage3d_t

class type_specifier_nonarray_uimage3d_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage3d_0;

  type_specifier_nonarray_uimage3d_t(
    std::unique_ptr<token_t> &&uimage3d_0_
  ): uimage3d_0(std::move(uimage3d_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage3d_t> make(
    const token_t *UIMAGE3D_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage3d_t>(
      std::make_unique<token_t>(*UIMAGE3D_0_)
    );
  }

};  // type_specifier_nonarray_uimage3d_t

class type_specifier_nonarray_image2drect_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image2drect_0;

  type_specifier_nonarray_image2drect_t(
    std::unique_ptr<token_t> &&image2drect_0_
  ): image2drect_0(std::move(image2drect_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image2drect_t> make(
    const token_t *IMAGE2DRECT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image2drect_t>(
      std::make_unique<token_t>(*IMAGE2DRECT_0_)
    );
  }

};  // type_specifier_nonarray_image2drect_t

class type_specifier_nonarray_iimage2drect_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage2drect_0;

  type_specifier_nonarray_iimage2drect_t(
    std::unique_ptr<token_t> &&iimage2drect_0_
  ): iimage2drect_0(std::move(iimage2drect_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage2drect_t> make(
    const token_t *IIMAGE2DRECT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage2drect_t>(
      std::make_unique<token_t>(*IIMAGE2DRECT_0_)
    );
  }

};  // type_specifier_nonarray_iimage2drect_t

class type_specifier_nonarray_uimage2drect_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage2drect_0;

  type_specifier_nonarray_uimage2drect_t(
    std::unique_ptr<token_t> &&uimage2drect_0_
  ): uimage2drect_0(std::move(uimage2drect_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage2drect_t> make(
    const token_t *UIMAGE2DRECT_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage2drect_t>(
      std::make_unique<token_t>(*UIMAGE2DRECT_0_)
    );
  }

};  // type_specifier_nonarray_uimage2drect_t

class type_specifier_nonarray_imagecube_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> imagecube_0;

  type_specifier_nonarray_imagecube_t(
    std::unique_ptr<token_t> &&imagecube_0_
  ): imagecube_0(std::move(imagecube_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_imagecube_t> make(
    const token_t *IMAGECUBE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_imagecube_t>(
      std::make_unique<token_t>(*IMAGECUBE_0_)
    );
  }

};  // type_specifier_nonarray_imagecube_t

class type_specifier_nonarray_iimagecube_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimagecube_0;

  type_specifier_nonarray_iimagecube_t(
    std::unique_ptr<token_t> &&iimagecube_0_
  ): iimagecube_0(std::move(iimagecube_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimagecube_t> make(
    const token_t *IIMAGECUBE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimagecube_t>(
      std::make_unique<token_t>(*IIMAGECUBE_0_)
    );
  }

};  // type_specifier_nonarray_iimagecube_t

class type_specifier_nonarray_uimagecube_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimagecube_0;

  type_specifier_nonarray_uimagecube_t(
    std::unique_ptr<token_t> &&uimagecube_0_
  ): uimagecube_0(std::move(uimagecube_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimagecube_t> make(
    const token_t *UIMAGECUBE_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimagecube_t>(
      std::make_unique<token_t>(*UIMAGECUBE_0_)
    );
  }

};  // type_specifier_nonarray_uimagecube_t

class type_specifier_nonarray_imagebuffer_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> imagebuffer_0;

  type_specifier_nonarray_imagebuffer_t(
    std::unique_ptr<token_t> &&imagebuffer_0_
  ): imagebuffer_0(std::move(imagebuffer_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_imagebuffer_t> make(
    const token_t *IMAGEBUFFER_0_
  ) {
    return std::make_unique<type_specifier_nonarray_imagebuffer_t>(
      std::make_unique<token_t>(*IMAGEBUFFER_0_)
    );
  }

};  // type_specifier_nonarray_imagebuffer_t

class type_specifier_nonarray_iimagebuffer_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimagebuffer_0;

  type_specifier_nonarray_iimagebuffer_t(
    std::unique_ptr<token_t> &&iimagebuffer_0_
  ): iimagebuffer_0(std::move(iimagebuffer_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimagebuffer_t> make(
    const token_t *IIMAGEBUFFER_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimagebuffer_t>(
      std::make_unique<token_t>(*IIMAGEBUFFER_0_)
    );
  }

};  // type_specifier_nonarray_iimagebuffer_t

class type_specifier_nonarray_uimagebuffer_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimagebuffer_0;

  type_specifier_nonarray_uimagebuffer_t(
    std::unique_ptr<token_t> &&uimagebuffer_0_
  ): uimagebuffer_0(std::move(uimagebuffer_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimagebuffer_t> make(
    const token_t *UIMAGEBUFFER_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimagebuffer_t>(
      std::make_unique<token_t>(*UIMAGEBUFFER_0_)
    );
  }

};  // type_specifier_nonarray_uimagebuffer_t

class type_specifier_nonarray_image1darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image1darray_0;

  type_specifier_nonarray_image1darray_t(
    std::unique_ptr<token_t> &&image1darray_0_
  ): image1darray_0(std::move(image1darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image1darray_t> make(
    const token_t *IMAGE1DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image1darray_t>(
      std::make_unique<token_t>(*IMAGE1DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_image1darray_t

class type_specifier_nonarray_iimage1darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage1darray_0;

  type_specifier_nonarray_iimage1darray_t(
    std::unique_ptr<token_t> &&iimage1darray_0_
  ): iimage1darray_0(std::move(iimage1darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage1darray_t> make(
    const token_t *IIMAGE1DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage1darray_t>(
      std::make_unique<token_t>(*IIMAGE1DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_iimage1darray_t

class type_specifier_nonarray_uimage1darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage1darray_0;

  type_specifier_nonarray_uimage1darray_t(
    std::unique_ptr<token_t> &&uimage1darray_0_
  ): uimage1darray_0(std::move(uimage1darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage1darray_t> make(
    const token_t *UIMAGE1DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage1darray_t>(
      std::make_unique<token_t>(*UIMAGE1DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_uimage1darray_t

class type_specifier_nonarray_image2darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image2darray_0;

  type_specifier_nonarray_image2darray_t(
    std::unique_ptr<token_t> &&image2darray_0_
  ): image2darray_0(std::move(image2darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image2darray_t> make(
    const token_t *IMAGE2DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image2darray_t>(
      std::make_unique<token_t>(*IMAGE2DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_image2darray_t

class type_specifier_nonarray_iimage2darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage2darray_0;

  type_specifier_nonarray_iimage2darray_t(
    std::unique_ptr<token_t> &&iimage2darray_0_
  ): iimage2darray_0(std::move(iimage2darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage2darray_t> make(
    const token_t *IIMAGE2DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage2darray_t>(
      std::make_unique<token_t>(*IIMAGE2DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_iimage2darray_t

class type_specifier_nonarray_uimage2darray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage2darray_0;

  type_specifier_nonarray_uimage2darray_t(
    std::unique_ptr<token_t> &&uimage2darray_0_
  ): uimage2darray_0(std::move(uimage2darray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage2darray_t> make(
    const token_t *UIMAGE2DARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage2darray_t>(
      std::make_unique<token_t>(*UIMAGE2DARRAY_0_)
    );
  }

};  // type_specifier_nonarray_uimage2darray_t

class type_specifier_nonarray_imagecubearray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> imagecubearray_0;

  type_specifier_nonarray_imagecubearray_t(
    std::unique_ptr<token_t> &&imagecubearray_0_
  ): imagecubearray_0(std::move(imagecubearray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_imagecubearray_t> make(
    const token_t *IMAGECUBEARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_imagecubearray_t>(
      std::make_unique<token_t>(*IMAGECUBEARRAY_0_)
    );
  }

};  // type_specifier_nonarray_imagecubearray_t

class type_specifier_nonarray_iimagecubearray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimagecubearray_0;

  type_specifier_nonarray_iimagecubearray_t(
    std::unique_ptr<token_t> &&iimagecubearray_0_
  ): iimagecubearray_0(std::move(iimagecubearray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimagecubearray_t> make(
    const token_t *IIMAGECUBEARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimagecubearray_t>(
      std::make_unique<token_t>(*IIMAGECUBEARRAY_0_)
    );
  }

};  // type_specifier_nonarray_iimagecubearray_t

class type_specifier_nonarray_uimagecubearray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimagecubearray_0;

  type_specifier_nonarray_uimagecubearray_t(
    std::unique_ptr<token_t> &&uimagecubearray_0_
  ): uimagecubearray_0(std::move(uimagecubearray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimagecubearray_t> make(
    const token_t *UIMAGECUBEARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimagecubearray_t>(
      std::make_unique<token_t>(*UIMAGECUBEARRAY_0_)
    );
  }

};  // type_specifier_nonarray_uimagecubearray_t

class type_specifier_nonarray_image2dms_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image2dms_0;

  type_specifier_nonarray_image2dms_t(
    std::unique_ptr<token_t> &&image2dms_0_
  ): image2dms_0(std::move(image2dms_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image2dms_t> make(
    const token_t *IMAGE2DMS_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image2dms_t>(
      std::make_unique<token_t>(*IMAGE2DMS_0_)
    );
  }

};  // type_specifier_nonarray_image2dms_t

class type_specifier_nonarray_iimage2dms_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage2dms_0;

  type_specifier_nonarray_iimage2dms_t(
    std::unique_ptr<token_t> &&iimage2dms_0_
  ): iimage2dms_0(std::move(iimage2dms_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage2dms_t> make(
    const token_t *IIMAGE2DMS_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage2dms_t>(
      std::make_unique<token_t>(*IIMAGE2DMS_0_)
    );
  }

};  // type_specifier_nonarray_iimage2dms_t

class type_specifier_nonarray_uimage2dms_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage2dms_0;

  type_specifier_nonarray_uimage2dms_t(
    std::unique_ptr<token_t> &&uimage2dms_0_
  ): uimage2dms_0(std::move(uimage2dms_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage2dms_t> make(
    const token_t *UIMAGE2DMS_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage2dms_t>(
      std::make_unique<token_t>(*UIMAGE2DMS_0_)
    );
  }

};  // type_specifier_nonarray_uimage2dms_t

class type_specifier_nonarray_image2dmsarray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> image2dmsarray_0;

  type_specifier_nonarray_image2dmsarray_t(
    std::unique_ptr<token_t> &&image2dmsarray_0_
  ): image2dmsarray_0(std::move(image2dmsarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_image2dmsarray_t> make(
    const token_t *IMAGE2DMSARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_image2dmsarray_t>(
      std::make_unique<token_t>(*IMAGE2DMSARRAY_0_)
    );
  }

};  // type_specifier_nonarray_image2dmsarray_t

class type_specifier_nonarray_iimage2dmsarray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> iimage2dmsarray_0;

  type_specifier_nonarray_iimage2dmsarray_t(
    std::unique_ptr<token_t> &&iimage2dmsarray_0_
  ): iimage2dmsarray_0(std::move(iimage2dmsarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_iimage2dmsarray_t> make(
    const token_t *IIMAGE2DMSARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_iimage2dmsarray_t>(
      std::make_unique<token_t>(*IIMAGE2DMSARRAY_0_)
    );
  }

};  // type_specifier_nonarray_iimage2dmsarray_t

class type_specifier_nonarray_uimage2dmsarray_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> uimage2dmsarray_0;

  type_specifier_nonarray_uimage2dmsarray_t(
    std::unique_ptr<token_t> &&uimage2dmsarray_0_
  ): uimage2dmsarray_0(std::move(uimage2dmsarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_uimage2dmsarray_t> make(
    const token_t *UIMAGE2DMSARRAY_0_
  ) {
    return std::make_unique<type_specifier_nonarray_uimage2dmsarray_t>(
      std::make_unique<token_t>(*UIMAGE2DMSARRAY_0_)
    );
  }

};  // type_specifier_nonarray_uimage2dmsarray_t

class type_specifier_nonarray_struct_specifier_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<struct_specifier_t> struct_specifier_0;

  type_specifier_nonarray_struct_specifier_t(
    std::unique_ptr<struct_specifier_t> &&struct_specifier_0_
  ): struct_specifier_0(std::move(struct_specifier_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_struct_specifier_t> make(
    std::unique_ptr<struct_specifier_t> &&struct_specifier_0_
  ) {
    return std::make_unique<type_specifier_nonarray_struct_specifier_t>(
      std::move(struct_specifier_0_)
    );
  }

};  // type_specifier_nonarray_struct_specifier_t

class type_specifier_nonarray_type_name_t: public type_specifier_nonarray_t {

public:

  std::unique_ptr<token_t> type_name_0;

  type_specifier_nonarray_type_name_t(
    std::unique_ptr<token_t> &&type_name_0_
  ): type_name_0(std::move(type_name_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_nonarray_type_name_t> make(
    const token_t *TYPE_NAME_0_
  ) {
    return std::make_unique<type_specifier_nonarray_type_name_t>(
      std::make_unique<token_t>(*TYPE_NAME_0_)
    );
  }

};  // type_specifier_nonarray_type_name_t

}   // ast

}   // gliss
