#pragma once


/**
 * DO NOT MODIFY - AUTO GENERATED BY "../scripts/gen_cpp_node_constants.js"
 */
  

#include <vector>
#include "../ast.h"
#include "struct-specifier.h"

namespace gliss {

namespace ast {

class type_specifier_nonarray_t: public ast_t {

public:

  using unique_pattern_t = std::shared_ptr<any_pattern_item_t>;

  using pattern_t = std::vector<unique_pattern_t>;

  static const std::vector<pattern_t> patterns;

  type_specifier_nonarray_t(
    const token_t &
  );

  type_specifier_nonarray_t(
    const struct_specifier_t &
  );

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

};  // type_specifier_nonarray_t

const std::vector<type_specifier_nonarray_t::pattern_t> type_specifier_nonarray_t::patterns = {
  {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("VOID"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("FLOAT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DOUBLE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("INT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UINT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("BOOL"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("VEC2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("VEC3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("VEC4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DVEC2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DVEC3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DVEC4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("BVEC2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("BVEC3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("BVEC4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IVEC2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IVEC3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IVEC4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UVEC2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UVEC3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UVEC4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT2X2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT2X3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT2X4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT3X2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT3X3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT3X4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT4X2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT4X3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("MAT4X4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT2X2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT2X3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT2X4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT3X2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT3X3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT3X4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT4X2"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT4X3"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("DMAT4X4"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ATOMIC_UINT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER1D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER3D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLERCUBE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER1DSHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DSHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLERCUBESHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER1DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER1DARRAYSHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DARRAYSHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLERCUBEARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLERCUBEARRAYSHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER1D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER2D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER3D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLERCUBE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER1DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER2DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLERCUBEARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER1D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER2D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER3D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLERCUBE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER1DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER2DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLERCUBEARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DRECT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DRECTSHADOW"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER2DRECT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER2DRECT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLERBUFFER"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLERBUFFER"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLERBUFFER"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DMS"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER2DMS"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER2DMS"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("SAMPLER2DMSARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("ISAMPLER2DMSARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("USAMPLER2DMSARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE1D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE1D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE1D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE2D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE2D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE2D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE3D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE3D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE3D"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE2DRECT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE2DRECT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE2DRECT"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGECUBE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGECUBE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGECUBE"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGEBUFFER"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGEBUFFER"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGEBUFFER"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE1DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE1DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE1DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE2DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE2DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE2DARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGECUBEARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGECUBEARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGECUBEARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE2DMS"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE2DMS"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE2DMS"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IMAGE2DMSARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("IIMAGE2DMSARRAY"))
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("UIMAGE2DMSARRAY"))
  }, {
    pattern_item_t<struct_specifier_t>::get()
  }, {
    pattern_item_t<token_t>::get(token_t::uppercase_to_kind("TYPE_NAME"))
  }
};

}   // ast

}   // gliss
