#pragma once

/**
 * DO NOT MODIFY - AUTO GENERATED BY "../scripts/gen_cpp_node_constants.js"
 */

#include <vector>
#include "../ast.h"

/**
 * Patterns for assignment_operator
 *
 * 1. EQUAL
 * 2. MUL_ASSIGN
 * 3. DIV_ASSIGN
 * 4. MOD_ASSIGN
 * 5. ADD_ASSIGN
 * 6. SUB_ASSIGN
 * 7. LEFT_ASSIGN
 * 8. RIGHT_ASSIGN
 * 9. AND_ASSIGN
 * 10. XOR_ASSIGN
 * 11. OR_ASSIGN
 */

namespace gliss {

namespace ast {

class assignment_operator_t: public ast_t {

public:

  static constexpr int rules = 11;

  static constexpr int id = 238;

  virtual ~assignment_operator_t() = default;

};  // assignment_operator_t

class assignment_operator_equal_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> equal_0;

  assignment_operator_equal_t(
    std::shared_ptr<ast_token_t> equal_0_
  ): equal_0(equal_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_equal_t> make(
    std::shared_ptr<ast_token_t> EQUAL_0_
  ) {
    return std::make_shared<assignment_operator_equal_t>(
      EQUAL_0_
    );
  }

};  // assignment_operator_equal_t

class assignment_operator_mul_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> mul_assign_0;

  assignment_operator_mul_assign_t(
    std::shared_ptr<ast_token_t> mul_assign_0_
  ): mul_assign_0(mul_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_mul_assign_t> make(
    std::shared_ptr<ast_token_t> MUL_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_mul_assign_t>(
      MUL_ASSIGN_0_
    );
  }

};  // assignment_operator_mul_assign_t

class assignment_operator_div_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> div_assign_0;

  assignment_operator_div_assign_t(
    std::shared_ptr<ast_token_t> div_assign_0_
  ): div_assign_0(div_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_div_assign_t> make(
    std::shared_ptr<ast_token_t> DIV_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_div_assign_t>(
      DIV_ASSIGN_0_
    );
  }

};  // assignment_operator_div_assign_t

class assignment_operator_mod_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> mod_assign_0;

  assignment_operator_mod_assign_t(
    std::shared_ptr<ast_token_t> mod_assign_0_
  ): mod_assign_0(mod_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_mod_assign_t> make(
    std::shared_ptr<ast_token_t> MOD_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_mod_assign_t>(
      MOD_ASSIGN_0_
    );
  }

};  // assignment_operator_mod_assign_t

class assignment_operator_add_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> add_assign_0;

  assignment_operator_add_assign_t(
    std::shared_ptr<ast_token_t> add_assign_0_
  ): add_assign_0(add_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_add_assign_t> make(
    std::shared_ptr<ast_token_t> ADD_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_add_assign_t>(
      ADD_ASSIGN_0_
    );
  }

};  // assignment_operator_add_assign_t

class assignment_operator_sub_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> sub_assign_0;

  assignment_operator_sub_assign_t(
    std::shared_ptr<ast_token_t> sub_assign_0_
  ): sub_assign_0(sub_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_sub_assign_t> make(
    std::shared_ptr<ast_token_t> SUB_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_sub_assign_t>(
      SUB_ASSIGN_0_
    );
  }

};  // assignment_operator_sub_assign_t

class assignment_operator_left_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> left_assign_0;

  assignment_operator_left_assign_t(
    std::shared_ptr<ast_token_t> left_assign_0_
  ): left_assign_0(left_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_left_assign_t> make(
    std::shared_ptr<ast_token_t> LEFT_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_left_assign_t>(
      LEFT_ASSIGN_0_
    );
  }

};  // assignment_operator_left_assign_t

class assignment_operator_right_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> right_assign_0;

  assignment_operator_right_assign_t(
    std::shared_ptr<ast_token_t> right_assign_0_
  ): right_assign_0(right_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_right_assign_t> make(
    std::shared_ptr<ast_token_t> RIGHT_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_right_assign_t>(
      RIGHT_ASSIGN_0_
    );
  }

};  // assignment_operator_right_assign_t

class assignment_operator_and_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> and_assign_0;

  assignment_operator_and_assign_t(
    std::shared_ptr<ast_token_t> and_assign_0_
  ): and_assign_0(and_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_and_assign_t> make(
    std::shared_ptr<ast_token_t> AND_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_and_assign_t>(
      AND_ASSIGN_0_
    );
  }

};  // assignment_operator_and_assign_t

class assignment_operator_xor_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> xor_assign_0;

  assignment_operator_xor_assign_t(
    std::shared_ptr<ast_token_t> xor_assign_0_
  ): xor_assign_0(xor_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_xor_assign_t> make(
    std::shared_ptr<ast_token_t> XOR_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_xor_assign_t>(
      XOR_ASSIGN_0_
    );
  }

};  // assignment_operator_xor_assign_t

class assignment_operator_or_assign_t: public assignment_operator_t {

public:

  std::shared_ptr<ast_token_t> or_assign_0;

  assignment_operator_or_assign_t(
    std::shared_ptr<ast_token_t> or_assign_0_
  ): or_assign_0(or_assign_0_) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  virtual int get_id() const override {
    return 238;
  }

  static std::shared_ptr<assignment_operator_or_assign_t> make(
    std::shared_ptr<ast_token_t> OR_ASSIGN_0_
  ) {
    return std::make_shared<assignment_operator_or_assign_t>(
      OR_ASSIGN_0_
    );
  }

};  // assignment_operator_or_assign_t

}   // ast

}   // gliss
