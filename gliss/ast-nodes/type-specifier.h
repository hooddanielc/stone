#pragma once

/**
 * DO NOT MODIFY - AUTO GENERATED BY "../scripts/gen_cpp_node_constants.js"
 */

#include <vector>
#include "../ast.h"
#include "type-specifier-nonarray.h"
#include "array-specifier.h"

/**
 * Patterns for type_specifier
 *
 * 1. type_specifier_nonarray
 * 2. type_specifier_nonarray array_specifier
 */

namespace gliss {

namespace ast {

class type_specifier_nonarray_t;
class array_specifier_t;

class type_specifier_t: public ast_t {

public:

  static constexpr int rules = 2;

  static constexpr int id = 262;

  virtual ~type_specifier_t() = default;

};  // type_specifier_t

class type_specifier_type_specifier_nonarray_t: public type_specifier_t {

public:

  std::unique_ptr<type_specifier_nonarray_t> type_specifier_nonarray_0;

  type_specifier_type_specifier_nonarray_t(
    std::unique_ptr<type_specifier_nonarray_t> &&type_specifier_nonarray_0_
  ): type_specifier_nonarray_0(std::move(type_specifier_nonarray_0_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_type_specifier_nonarray_t> make(
    std::unique_ptr<type_specifier_nonarray_t> &&type_specifier_nonarray_0_
  ) {
    return std::make_unique<type_specifier_type_specifier_nonarray_t>(
      std::move(type_specifier_nonarray_0_)
    );
  }

};  // type_specifier_type_specifier_nonarray_t

class type_specifier_type_specifier_nonarray_array_specifier_t: public type_specifier_t {

public:

  std::unique_ptr<type_specifier_nonarray_t> type_specifier_nonarray_0;

  std::unique_ptr<array_specifier_t> array_specifier_1;

  type_specifier_type_specifier_nonarray_array_specifier_t(
    std::unique_ptr<type_specifier_nonarray_t> &&type_specifier_nonarray_0_,
    std::unique_ptr<array_specifier_t> &&array_specifier_1_
  ): type_specifier_nonarray_0(std::move(type_specifier_nonarray_0_)),
     array_specifier_1(std::move(array_specifier_1_)) {}

  virtual void accept(const visitor_t &visitor) const override {
    visitor(this);
  }

  static std::unique_ptr<type_specifier_type_specifier_nonarray_array_specifier_t> make(
    std::unique_ptr<type_specifier_nonarray_t> &&type_specifier_nonarray_0_,
    std::unique_ptr<array_specifier_t> &&array_specifier_1_
  ) {
    return std::make_unique<type_specifier_type_specifier_nonarray_array_specifier_t>(
      std::move(type_specifier_nonarray_0_),
      std::move(array_specifier_1_)
    );
  }

};  // type_specifier_type_specifier_nonarray_array_specifier_t

}   // ast

}   // gliss
